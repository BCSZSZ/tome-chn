./data/zones/high-peak/grids.lua:	game.logPlayer(who, "#LIGHT_BLUE#You use the orb on the portal, shutting it down easily.")
./data/zones/dreams/grids.lua:			game.logPlayer(who, "You touch the dreamstone and it disappears. You feel better.")
./data/zones/dreams/zone.lua:				game.logPlayer(game.player, msg:gsub("\n", " "))
./data/zones/dreams/zone.lua:				game.logPlayer(game.player)
./data/zones/lake-nur/grids.lua:			game.logPlayer(who, "#ANTIQUE_WHITE#You notice a hole that could fit the gem key you found earlier, inserting it reveals the passage to the next level.")
./data/zones/lake-nur/grids.lua:			game.logPlayer(who, "#ANTIQUE_WHITE#The way seems closed, maybe you need a key.")
./data/zones/lake-nur/grids.lua:			game.logPlayer(who, "#ANTIQUE_WHITE#You notice a hole that could fit the gem key you found earlier, inserting it reveals the passage to the next level.")
./data/zones/lake-nur/grids.lua:			game.logPlayer(who, "#ANTIQUE_WHITE#The way seems closed, maybe you need a key.")
./data/zones/halfling-ruins/objects.lua:			game.logPlayer(who, "#RED#You feel disgusted touching this thing!")
./data/zones/halfling-ruins/objects.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel this robe was made for you!")
./data/zones/keepsake-meadow/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/keepsake-meadow/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/keepsake-meadow/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/shadow-crypt/npcs.lua:				game.logPlayer(game.player, "#GREY#The cultist looks deep in your eyes. You feel torn apart!")
./data/zones/reknor/npcs.lua:		game.logPlayer(game.player, "#LIGHT_RED#You hear a death cry. '%s I have a messag... ARG!'", game.player.name:capitalize())
./data/zones/reknor/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/reknor/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/eidolon-plane/zone.lua:		game.logPlayer(who, "The Eidolon Plane seems not to physically exist in the same way the normal world does. You cannot seem to drop anything here. %s comes back into your backpack.", o:getName{do_color=true})
./data/zones/eidolon-plane/zone.lua:			game.logPlayer(game.player, "#LIGHT_RED#You are sent back to the material plane!")
./data/zones/shertul-fortress/zone.lua:					game.logPlayer(who, "Your %s is magically sorted by the storage room.", o:getName{do_color=true})
./data/zones/shertul-fortress/zone.lua:					game.logPlayer(who, "Your %s is magically sorted by the storage room and put in a pile with the others items of the same type.", o:getName{do_color=true})
./data/zones/shertul-fortress/zone.lua:		game.logPlayer(who, "It seems the room has no more space to sort your %s.", o:getName{do_color=true})
./data/zones/tannen-tower/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/tannen-tower/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/tannen-tower/objects.lua:				game.logPlayer(who, "There is no portal to activate here.")
./data/zones/tannen-tower/objects.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/zones/last-hope-graveyard/npcs.lua:				game.logPlayer(p, "You receive: %s.", o:getName{do_color=true})
./data/zones/last-hope-graveyard/objects.lua:		game.logPlayer(who, "You squeeze Celia's heart in your hand, absorbing part of her soul into your necrotic aura.")
./data/zones/temple-of-creation/zone.lua:			game.logPlayer(game.player, "#AQUAMARINE#You arrive deep under water, at the sea floor, as you look upwards you only see a glimpse of light coming through.")
./data/zones/temple-of-creation/zone.lua:			game.logPlayer(game.player, "#AQUAMARINE#You should be crushed by the pressure, but strangely you feel no discomfort.")
./data/zones/temple-of-creation/zone.lua:			game.logPlayer(game.player, "#AQUAMARINE#All around you there is only water as far as you can see, except to your left, a giant coral structure. This is probably the temple of Creation.")
./data/zones/demon-plane/grids.lua:					game.logPlayer(who, "#VIOLET#You enter the swirling portal and in the blink of an eye you are back to Maj'Eyal, near the Daikara.")
./data/zones/tutorial-combat-stats/grids.lua:					game.logPlayer(who, "#VIOLET#You enter the swirling portal and in the blink of an eye you are back in the lobby.")
./data/zones/tutorial-combat-stats/grids.lua:					game.logPlayer(who, "#VIOLET#You enter the swirling portal and in the blink of an eye you are back in the lobby.")
./data/zones/tutorial-combat-stats/grids.lua:		game.logPlayer(actor, "#VIOLET#You feel unenlightened.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Shove.")
./data/zones/tutorial-combat-stats/grids.lua:				game.logPlayer(actor, "#VIOLET#The sound of an ancient door grinding open echoes down the tunnel!")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Mana Gale.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Mana Gale.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Telekinetic Punt.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Blink.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Fear.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Bleed.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(actor, "#VIOLET#You have learned the talent Confusion.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(game.player, "#VIOLET#You must achieve Enlightenment before you can pass. Seek ye to the west to discover the ancient art of Shoving Stuff.")
./data/zones/tutorial-combat-stats/grids.lua:			game.logPlayer(game.player, "#VIOLET#You must achieve Enlightenment before you can pass. Seek ye to the west to discover the ancient art of Shoving Stuff.")
./data/zones/ancient-elven-ruins/objects.lua:		game.logPlayer(who, "#ANTIQUE_WHITE#The powerful darkness aura you felt wanes away.")
./data/zones/town-gates-of-morning/npcs.lua:			game.logPlayer(game.player, "You find a note containing the location of the Orc Prides on Aeryn's body.")
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "#00FFFF#You consume the heart and feel the knowledge of this very old creature fill you!")
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "You have %d stat point(s) to spend. Press p to use them.", who.unused_stats)
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "You have %d class talent point(s) to spend. Press p to use them.", who.unused_talents)
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "You have %d generic talent point(s) to spend. Press p to use them.", who.unused_generics)
./data/zones/sandworm-lair/objects.lua:			game.logPlayer(who, "You are transformed by the heart of the Queen!.")
./data/zones/sandworm-lair/objects.lua:			game.logPlayer(who, "#00FF00#You gain an affinity for nature. You can now learn new Harmony talents (press p).")
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "#00FFFF#You drink the wyrm bile and feel forever transformed!")
./data/zones/sandworm-lair/objects.lua:		game.logPlayer(who, "#00FF00#Your stats have changed! (Str %s, Dex %s, Mag %s, Wil %s, Cun %s, Con %s)", str, dex, mag, wil, cun, con)
./data/zones/infinite-dungeon/objects.lua:			game.logPlayer(who, "#VIOLET#You seem to understand the basic martial pratices. (Combat Training talents unlocked)")
./data/zones/infinite-dungeon/objects.lua:			game.logPlayer(who, "#VIOLET#You seem to now know how to properly use a bow or a sling.")
./data/zones/infinite-dungeon/objects.lua:			game.logPlayer(who, "#VIOLET#Images of yourself beating people with a stick spring into your mind. (Staff Combat category can be bought)")
./data/zones/infinite-dungeon/objects.lua:			game.logPlayer(who, "#VIOLET#You suddenly understand how to channel your mental force through mindstars. (Mindstar Mastery category can be bought)")
./data/zones/infinite-dungeon/objects.lua:			game.logPlayer(who, "#VIOLET#It seems you already knew all the elixir could teach you.")
./data/zones/infinite-dungeon/objects.lua:							game.logPlayer(who, "You cannot use your %s anymore; it is tainted by magic.", o:getName{do_color=true})
./data/zones/mark-spellblaze/objects.lua:		game.logPlayer(who, "#00FFFF#You consume the heart and feel the corruption fill you!")
./data/zones/mark-spellblaze/objects.lua:		game.logPlayer(who, "You have %d stat point(s) to spend. Press p to use them.", who.unused_stats)
./data/zones/mark-spellblaze/objects.lua:		game.logPlayer(who, "You have %d class talent point(s) to spend. Press p to use them.", who.unused_talents)
./data/zones/mark-spellblaze/objects.lua:		game.logPlayer(who, "You have %d generic talent point(s) to spend. Press p to use them.", who.unused_generics)
./data/zones/mark-spellblaze/objects.lua:			game.logPlayer(who, "You are transformed by the corrupted heart of the Queen!.")
./data/zones/mark-spellblaze/objects.lua:			game.logPlayer(who, "#00FF00#You gain an affinity for blight. You can now learn new Vile Life talents (press p).")
./data/zones/vor-pride/objects.lua:			game.logPlayer(who, "#00FFFF#You read the tome and learn about ancient forgotten fire magic!")
./data/zones/vor-pride/objects.lua:			game.logPlayer(who, "#00FFFF#You read the tome and perfect your mastery of fire magic!")
./data/zones/vor-pride/objects.lua:			game.logPlayer(who, "#00FFFF#You read the tome and learn about ancient forgotten ice magic!")
./data/zones/vor-pride/objects.lua:			game.logPlayer(who, "#00FFFF#You read the tome and perfect your mastery of ice magic!")
./data/quests/ring-of-blood.lua:	game.logPlayer(who, "#LIGHT_BLUE#The Blood Master hands you the %s.", o:getName{do_color=true})
./data/quests/pre-charred-scar.lua:	game.logPlayer(game.player, "Aeryn explained where the orcs were spotted.")
./data/quests/escort-duty.lua:		game.logPlayer(game.player, "#LIGHT_RED#%s is dead, quest failed!", self.name:capitalize())
./data/quests/orc-hunt.lua:	game.logPlayer(game.player, "The elder points to Reknor on your map, to the north on the western side of the Iron Throne.")
./data/quests/mage-apprentice.lua:				game.logPlayer(who, "#LIGHT_RED#As the apprentice touches the staff he begins to scream, flames bursting out of his mouth. Life seems to be drained away from him, and in an instant he collapses in a lifeless husk.")
./data/quests/mage-apprentice.lua:		game.logPlayer(player, "You receive: %s", o:getName{do_color=true})
./data/quests/brotherhood-of-alchemists.lua:					--game.logPlayer(player, "Supposedly added one %s", self.e[i][j].ingredients[k].name)
./data/quests/brotherhood-of-alchemists.lua:--	game.logPlayer(player, "List updated. Now needed:")
./data/quests/brotherhood-of-alchemists.lua:--		game.logPlayer(player, "one %s", self.needed_ingredients[l].name)
./data/quests/brotherhood-of-alchemists.lua:	--game.logPlayer(player, "Hey! %s", self.needed_ingredients[2].name)
./data/quests/brotherhood-of-alchemists.lua:		game.logPlayer(player, "You receive: %s", o:getName{do_color=true})
./data/quests/brotherhood-of-alchemists.lua:--		game.logPlayer(player, "You receive: %s", o:getName{do_color=true})
./data/quests/brotherhood-of-alchemists.lua:	--game.logPlayer(player, "Alchemist picked: %s", alch_picked)
./data/quests/spydric-infestation.lua:	game.logPlayer(game.player, "She marks the location of Ardhungol on your map.")
./data/quests/spydric-infestation.lua:	game.logPlayer(who, "A portal appears right under you, and Rashim rushes through.")
./data/quests/master-jeweler.lua:	game.logPlayer(who, "#VIOLET#This tome seems to be about the power of gems. Maybe you should bring it to the jeweler in the Gates of Morning.")
./data/quests/master-jeweler.lua:	game.logPlayer(game.player, "Limmir points to the entrance to a cave on your map. This is supposed to be the way to the valley.")
./data/quests/master-jeweler.lua:		game.logPlayer(who, "You must be near the moonstone to summon Limmir.")
./data/quests/master-jeweler.lua:	if not o then game.logPlayer(who, "You do not have the summoning scroll!") return end
./data/quests/high-peak.lua:		game.logPlayer(game.player, "#LIGHT_RED#As you enter the level you hear a familiar voice.")
./data/quests/high-peak.lua:		game.logPlayer(game.player, "#LIGHT_RED#Fallen Sun Paladin Aeryn: '%s YOU BROUGHT ONLY DESTRUCTION TO THE SUNWALL! YOU WILL PAY!'", game.player.name:upper())
./data/quests/temple-of-creation.lua:	game.logPlayer(game.player, "A portal opens behind Ukllmswwik.")
./data/quests/temple-of-creation.lua:	game.logPlayer(game.player, "A portal opens to the flooded cave.")
./data/quests/lost-merchant.lua:		game.logPlayer(who, "A stairway out appears at your feet. The Lord says: 'And remember, you are MINE. I will call you.'")
./data/quests/lost-merchant.lua:		game.logPlayer(who, "#LIGHT_BLUE#The merchant thanks you for saving his life. He gives you 8 gold and asks you to meet him again in Last Hope.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#The time has come to learn the true nature of your curse.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You find yourself in a dream.")
./data/quests/keepsake.lua:		game.logPlayer(who, "#VIOLET#Your hate surges. You refuse to succumb to death!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have discovered a small iron acorn, a link to your past.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#The merchant caravan from the past has appeared in your dream.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have begun your hunt for Kyless!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have a marker to the entrance of Kyless' cave!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have found the entrance to Kyless' cave!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have found the entrance to a vault!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#The shadows have noticed you!")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#You have found Kyless. You must destroy him.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#Kyless is dead.")
./data/quests/keepsake.lua:	game.logPlayer(who, "#VIOLET#Berethh lies dead.")
./data/quests/east-portal.lua:	game.logPlayer(game.player, "Tannen points to the location of Telmur on your map.")
./data/quests/east-portal.lua:	game.logPlayer(who, "#VIOLET#You enter the swirling portal and in the blink of an eye you are back in Last Hope.")
./data/quests/lumberjack-cursed.lua:	game.logPlayer(game.player, "He points in the direction of the Riljek forest to the north.")
./data/quests/west-portal.lua:	game.logPlayer(game.player, "Zemekkys points to the location of Vor Armoury on your map.")
./data/quests/west-portal.lua:	game.logPlayer(game.player, "Zemekkys points to the location of Briagh's lair on your map.")
./data/quests/west-portal.lua:	game.logPlayer(game.player, "#VIOLET#Zemekkys starts to draw runes on the floor using the athame and gem dust.")
./data/quests/west-portal.lua:	game.logPlayer(game.player, "#VIOLET#The whole area starts to shake!")
./data/quests/west-portal.lua:	game.logPlayer(game.player, "#VIOLET#Zemekkys says: 'The portal is done!'")
./data/quests/charred-scar.lua:		game.logPlayer(game.player, "#VIOLET#A portal activates in the distance. You hear the orcs shout, 'The Sorcerers have departed! Follow them!'")
./data/quests/charred-scar.lua:		game.logPlayer(game.player, "#VIOLET#The Sorcerers flee through a portal. As you prepare to follow them, a huge faeros appears to block the way.")
./data/quests/start-yeek.lua:			game.logPlayer(game.player, "You should head to the tunnel to Maj'Eyal and explore the world. For the Way.")
./data/quests/staff-absorption.lua:	game.logPlayer(who, "#00FFFF#You can feel the power of this staff just by carrying it. This is both ancient and dangerous.")
./data/quests/staff-absorption.lua:	game.logPlayer(who, "#00FFFF#It should be shown to the wise elders in Last Hope!")
./data/quests/staff-absorption.lua:	game.logPlayer(who, "#VIOLET#As you come out of the Dreadfell, you encounter a band of orcs!")
./data/quests/orb-command.lua:	game.logPlayer(who, "#LIGHT_BLUE#There is a loud crack. The way is open.")
./data/damage_types.lua:			game.logPlayer(src, "You end your target with a crushing blow!")
./data/damage_types.lua:					game.logPlayer(who, msg, o:getName{do_color=true, no_count=true})
./data/damage_types.lua:						game.logPlayer(target, "#DARK_ORCHID#Your damage shield cannot be extended any farther and has exploded.")
./data/general/grids/sand.lua:						game.logPlayer(a, "You are crushed by the collapsing tunnel! You suffocate!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#CRIMSON#The spirit of Garkul fades away.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_RED#You feel the Blood of Life rushing through your veins.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "The Blood of Life seems to have no effect on you.")
./data/general/objects/world-artifacts.lua:					game.logPlayer(who, "#CRIMSON#Rogue Plight transfers an effect to its source!")
./data/general/objects/world-artifacts.lua:							game.logPlayer(who, "#CRIMSON#Rogue Plight transfers an effect to a nearby enemy!")
./data/general/objects/world-artifacts.lua:		if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#The legacy of Dwarven Emperors grants you their wisdom.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#ANTIQUE_WHITE#The light from the two blades fades as they are separated.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#GOLD#As the helm of Kroltar approaches the your scale armour, they begin to fume and emit fire.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#GOLD#The fumes and fire fade away.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#As you don the %s, you gain understanding of the might of your race.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#GOLD#You grow to immense size!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#LIGHT_BLUE#You feel a lot smaller...")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel as surge of power as you wear the vestments of the old Human Conclave!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#STEEL_BLUE#A time vortex briefly appears in front of you.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#STEEL_BLUE#A time vortex briefly appears in front of you.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel as surge of power as you wield the axe of your ancestors!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#DARK_BLUE#The skin seems pleased to be worn by the unliving, and grows silent.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel your dwarven power swelling to meet the challenge of this armor!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#CRIMSON#Time seems less perfect in your eyes as the blades are separated.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel the whisper of your ancestors as you wield this pickaxe!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#DARK_GREEN#You feel nature's power protecting you!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel the power of the Way within you!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#RED#The Way rejects its former captors!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel the power of the sceptre flow over your undead form!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#DARK_GREEN#The Heart pulses with antimagic forces as you grasp it.")
./data/general/objects/world-artifacts.lua:				game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/world-artifacts.lua:				game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/world-artifacts.lua:				game.logPlayer(who, "#SLATE#The link between the mindstars is broken.")
./data/general/objects/world-artifacts.lua:				game.logPlayer(who, "#SLATE#The link between the mindstars is broken.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#CRIMSON#Your eyesight fades!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#CRIMSON#The tentacles release your arm, sated.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#CRIMSON#As you tear the tentacles from your arm, horrible images enter your mind!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#CRIMSON#As you wield the sword, the tentacles on its hilt wrap around your arm. You feel the sword's will invading your mind!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "You crush the %s, and the gloves take on an illustrious shine!", o:getName{do_color=true})
./data/general/objects/world-artifacts.lua:					game.logPlayer(who, "#ORCHID#Umbraphage is fully powered!")
./data/general/objects/world-artifacts.lua:			if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/world-artifacts.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/general/objects/world-artifacts.lua:			if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/world-artifacts.lua:				game.logPlayer(self, "Not enough space to invoke!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#DARK_GREEN#You feel a great power rise within you!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#CRIMSON# A powerful healing aura appears around you as you equip the %s.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#DARK_GREEN#You feel the strength of the whole world behind you!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#GOLD#The sands slowly begin falling towards %s.", self.direction > 0 and "stability" or "entropy")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#GOLD#As the final sands drop into place, you feel a surge of power.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#GOLD#As the final sands drop into place, you suddenly feel safer.")
./data/general/objects/world-artifacts.lua:			game.logPlayer(self.worn_by, "#LIGHT_BLUE#A barrier bursts from the leather jacket!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#DARK_GREY#Your ring releases a burst of necromantic energy!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#DARK_GREY#Your ring's power fades away.")
./data/general/objects/world-artifacts.lua:			if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/world-artifacts.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/general/objects/world-artifacts.lua:			game.logPlayer(who, "#RED#You feel yourself lost in the aura of the robe.")
./data/general/objects/world-artifacts.lua:						game.logPlayer(who, "#GREEN#Lightning strikes the " .. p.name .. "!")
./data/general/objects/world-artifacts.lua:						game.logPlayer(who, "#GREEN#Shantiz strikes down a projectile!")
./data/general/objects/world-artifacts.lua:						game.logPlayer(who, "You remove your %s.", old_gem:getName{do_colour=true, no_count=true})
./data/general/objects/world-artifacts.lua:					game.logPlayer(who, "You imbue your %s with %s.", self:getName{do_colour=true, no_count=true}, gem:getName{do_colour=true, no_count=true})
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#STEEL_BLUE#The fist and the mangled clothing glow ominously!")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#STEEL_BLUE#The ominous glow dies down.")
./data/general/objects/world-artifacts.lua:		game.logPlayer(who, "#GREEN#The seasons no longer feel balanced.")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has given you foxlike physical and mental agility!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your defensive instincts!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your eye for an enemy's weak points!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has augmented your magical and mental capacity!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your resistance to unpleasant effects!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has greatly expanded your capacity for improving your mind and body.")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "You have %d stat point(s) to spend. Press G to use them.", who.unused_stats)
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your eye for an enemy's magical weak points!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir seems to have subtly repositioned your entire being within the fabric of reality!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your capacity for exercising your core talents.")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has augmented your physical might and resilience!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has reinforced your entire body!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FFFF#You drink the elixir and feel forever transformed!")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#The elixir has improved your capacity for exercising your core talents.")
./data/general/objects/brotherhood-artifacts.lua:		game.logPlayer(who, "#00FF00#You feel indestructible!")
./data/general/objects/boss-artifacts.lua:			game.logPlayer(who, "#DARK_GREEN#You feel like Nature's Wrath incarnate!")
./data/general/objects/world-artifacts-far-east.lua:			game.logPlayer(who, "#GOLD#You feel a swell of positive energy!")
./data/general/objects/world-artifacts-far-east.lua:		game.logPlayer(who, "#GOLD#As you wield the sword and shield of the Sunwall, you feel the Sun's light radiating from your core.")
./data/general/objects/world-artifacts-far-east.lua:		game.logPlayer(who, "#GOLD#You feel the Sun's light vanish from within you.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#SLATE#The link between the mindstars is broken.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#GREEN#Your mindstars resonate with Nature's purity.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#GREEN#Your mindstars resonate with Nature's purity.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#PURPLE#You feel the spirit of the wyrm stirring inside you!")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#YELLOW#Your mindstars resonate with psionic energy.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#YELLOW#Your mindstars resonate with psionic energy.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#YELLOW#Psionic energy flows through your mindstars.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#YELLOW#Psionic energy flows through your mindstars.")
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "Your %s has already been divided.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "You must have a free hand to divide the %s.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "You cannot split your %s while it has a tinker inside.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "You cannot split your %s while using it as a psionic focus.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "Your %s is too flawed to divide.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:			game.logPlayer(who, "You divide your %s in two, forming a linked set.", self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "#GREEN#The mindstars pulse with life as it synergises with its twin.")
./data/general/objects/egos/mindstars.lua:				game.logPlayer(who, "#SLATE#The link between the mindstars is broken.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#GREY#You feel a swell of hatred from your mindstars.")
./data/general/objects/egos/mindstars.lua:		game.logPlayer(who, "#GREY#You feel a swell of hatred from your mindstars.")
./data/general/objects/egos/staves.lua:				game.logPlayer(who, "You have no appropriate weapon.")
./data/general/objects/egos/staves.lua:					game.logPlayer(who, "Your negative mana regeneration rate is unaffected by the staff.")
./data/general/objects/egos/staves.lua:					game.logPlayer(who, "Another mana surge is currently active.")
./data/general/objects/egos/staves.lua:					game.logPlayer(who, "Your nonexistant mana regeneration rate is unaffected by the staff.")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "This power seems too much to wield; you fear it might absorb YOU.")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:				game.logPlayer(who, "There is no portal to activate here.")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:				game.logPlayer(who, "There is no portal to activate here.")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:				game.logPlayer(who, "The rod emits a strange noise, glows briefly and returns to normal.")
./data/general/objects/quest-artifacts.lua:					game.logPlayer(who, "Space around you starts to dissolve...")
./data/general/objects/quest-artifacts.lua:							game.logPlayer(who, "Space around you starts to dissolve...")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "The rod emits a strange noise, glows briefly and returns to normal.")
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/quest-artifacts.lua:			game.logPlayer(who, "You cannot bring yourself to drop the %s", self:getName())
./data/general/objects/boss-artifacts-maj-eyal.lua:		if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/boss-artifacts-maj-eyal.lua:		if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logPlayer(who, "Not enough space to invoke the vampire!")
./data/general/objects/boss-artifacts-maj-eyal.lua:					game.logPlayer(wearer, "#GOLD#As the crystalline weapon and armour are brought together, they begin to emit a constant humming.")
./data/general/objects/boss-artifacts-maj-eyal.lua:					game.logPlayer(wearer, "#GOLD#The humming from the crystalline artifacts fades as they are separated.")
./data/general/objects/boss-artifacts-maj-eyal.lua:						game.logPlayer(who, "You created: %s", o:getName{do_color=true})
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logPlayer(who, "You fix the crystal on the %s and create the %s.", oldname, o:getName{do_color=true})
./data/general/objects/boss-artifacts-maj-eyal.lua:						game.logPlayer(who, "You created: %s", o:getName{do_color=true})
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logPlayer(who, "You fix the crystal on the %s and create the %s.", oldname, o:getName{do_color=true})
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_RED#You feel uneasy carrying %s.", self:getName())
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_GREEN#You feel the cleansing power of Penitence attune to you.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel invincible!")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_GREEN#You understand this bow-and its connection to nature-in a way few can.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_BLUE#You feel a kindred spirit in this bow...")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel a great hero guiding you!")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_BLUE#Herah's guile and luck is with you, her successor!")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel nature defending you.")
./data/general/objects/world-artifacts-maj-eyal.lua:				game.logPlayer(who, "You fix the crystal on the %s and create the %s.", oldname, o:getName{do_color=true})
./data/general/objects/world-artifacts-maj-eyal.lua:				game.logPlayer(who, "The fusing fails!")
./data/general/objects/world-artifacts-maj-eyal.lua:		game.logPlayer(game.player, "#CRIMSON#The unearthly glow fades away.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_GREEN#Nessilla's belt seems to come alive as you put it on.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_GREEN#You feel especially blessed.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#LIGHT_BLUE#You feel a great hero watching over you!")
./data/general/objects/world-artifacts-maj-eyal.lua:		game.logPlayer(who, "#STEEL_BLUE#The arcane energies surrounding you dissipate.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logPlayer(who, "#DARK_GREEN#The armor molds comfortably to one of its caretakers.")
./data/general/objects/money.lua:		game.logPlayer(who, "You pickup %0.2f gold pieces.", self.money_value / 10)
./data/general/npcs/horror.lua:					--game.logPlayer(self, "Not enough space to invoke!")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_BLUE#You carefully get away without making a sound.")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_RED#You carefully open the trap door and enter the underground tunnels...")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_RED#As you enter you notice the trap door has no visible handle on the inside. You are stuck here!")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_BLUE#You carefully get away without making a sound.")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_RED#You carefully open the door and enter the underground crypt...")
./data/general/encounters/maj-eyal.lua:				game.logPlayer(who, "#LIGHT_RED#As you enter you notice the door has no visible handle on the inside. You are stuck here!")
./data/general/encounters/fareast.lua:		game.logPlayer(who, "#LIGHT_BLUE#You notice an entrance to an underwater cave.")
./data/general/events/rat-lich.lua:			if not who:canBe("summon") then game.logPlayer(who, "You cannot summon; you are suppressed!") return end

./data/chats/jewelry-store.lua:				game.logPlayer(player, "%s creates: %s", npc.name:capitalize(), ring:getName{do_colour=true, no_count=true})
./data/chats/jewelry-store.lua:					game.logPlayer(player, "%s creates: %s", npc.name:capitalize(), amulet:getName{do_colour=true, no_count=true})
./data/chats/fallen-aeryn.lua:	game.logPlayer(player, "%s grabs her amulet and disappears in a whirl of arcane energies.", npc.name:capitalize())
./data/chats/message-last-hope.lua:				game.logPlayer(player, "The herald gives you %s.", o:getName{do_color=true})
./data/chats/myssil.lua:			game.logPlayer(player, "#00FF00#You gain the fungus talents school.")
./data/chats/yeek-wayist.lua:			game.logPlayer(player, "The contact with the Wayist mind has improved your mental shields. (+15 mental save, +10%% confusion resistance)")
./data/chats/zigur-trainer.lua:				game.logPlayer(player, "You cannot use your %s anymore; it is tainted by magic.", o:getName{do_color=true})
./data/chats/angolwen-staves-store.lua:			game.logPlayer(player, "The staff carver spends some time with you, teaching you the basics of staff combat.")
./data/chats/angolwen-staves-store.lua:				game.logPlayer(player, "He is surprised at how quickly you are able to follow his tutelage.")
./data/chats/angolwen-staves-store.lua:			game.logPlayer(player, "The staff carver spends a substantial amount of time teaching you all of the techniques of staff combat.")
./data/chats/angolwen-staves-store.lua:				game.logPlayer(player, "He is impressed with your mastery and shows you a few extra techniques.")
./data/chats/angolwen-staves-store.lua:			game.logPlayer(player, ("The staff carver spends a great deal of time going over the finer details of staff combat with you%s."):format(player:getTalentTypeMastery("spell/staff-combat")>1 and ", including some esoteric techniques" or ""))
./data/chats/zigur-mindstar-store.lua:			game.logPlayer(player, "The shopkeeper spends some time with you, teaching you the basics of channeling energy through mindstars.")
./data/chats/zigur-mindstar-store.lua:				game.logPlayer(player, "He is impressed with your affinity for natural forces.")
./data/chats/zigur-mindstar-store.lua:			game.logPlayer(player, "The shopkeeper spends a great deal of time going over the finer details of channeling energy through mindstars with you.")
./data/chats/zigur-mindstar-store.lua:				game.logPlayer(player, "He is impressed with your mastery and shows you a few tricks to handle stronger energy flows.")
./data/chats/zigur-mindstar-store.lua:			game.logPlayer(player, ("The shopkeeper spends a great deal of time going over the finer details of channeling energy through mindstars with you%s."):format(player:getTalentTypeMastery("wild-gift/mindstar-mastery")>1 and ", and teaches you enhanced mental discipline needed to maintain powerful energy fields" or ""))
./data/chats/trap-priming.lua:						if not canlearn then game.logPlayer(player, "#LIGHT_BLUE#You cannot prepare this trap: %s.", unlearnable) return end
./data/chats/last-hope-weapon-store.lua:			game.logPlayer(player, "The smith spends some time with you, teaching you the basics of armour and weapon usage.")
./data/chats/last-hope-weapon-store.lua:			game.logPlayer(player, "The smith spends some time with you, teaching you the basics of bows and slings.")
./data/chats/chronomancy-see-threads.lua:		game.logPlayer(game.player, "#PURPLE#A paradox has already destroyed other timelines!")
./data/chats/chronomancy-see-threads.lua:	game.logPlayer(game.player, "#LIGHT_BLUE#You select the timeline and re-arrange the universe to your liking!")
./data/chats/sorcerer-fight.lua:		game.logPlayer(player, "High Sun Paladin Aeryn appears next to you!")
./data/chats/last-hope-melinda-father.lua:				game.logPlayer(player, "Melinda's father gives you: %s", ro:getName{do_color=true})
./data/chats/gates-of-morning-main.lua:			game.logPlayer(game.player, "Aeryn points to the known locations on your map.")
./data/chats/gates-of-morning-main.lua:			game.logPlayer(game.player, "#VIOLET#You have learned the talent Relentless Pursuit.")
./data/chats/gates-of-morning-main.lua:					game.logPlayer(player, "Aeryn gives you: %s", ro:getName{do_color=true})
./data/maps/vaults/portal-vault.lua:				game.logPlayer(who, "#YELLOW#The Portal repels you briefly before becoming quiescent.  The other side seems to be blocked.")
./data/maps/vaults/portal-vault.lua:					game.logPlayer(who, "#YELLOW#An overcome intense #LIGHT_BLUE#REPULSIVE FORCES#LAST# as you traverse the Portal.")
./data/maps/vaults/portal-vault.lua:		game.logPlayer(who, "#YELLOW#Nothing happens when you use the Portal.")
./data/maps/vaults/greater-crypt.lua:		game.logPlayer(actor, "Something in the floor clicks ominously%s", actor.lite > 0 and not actor:attr("blind") and ", and suddenly the world spins around you!" or ".")
./data/maps/vaults/greater-crypt.lua:		game.logPlayer(actor, "Something in the floor clicks ominously%s", actor.lite > 0 and not actor:attr("blind") and ", and the crypt rearranges itself around you!" or ".")
./data/maps/vaults/greater-crypt.lua:		game.logPlayer(actor, "Something in the floor clicks ominously.")
./data/maps/vaults/greater-crypt.lua:		game.logPlayer(actor, "Something in the floor clicks ominously%s", actor.lite > 0 and not actor:attr("blind") and ", and the crypt rearranges itself around you!" or ".")
./data/maps/vaults/greater-crypt.lua:		game.logPlayer(actor, "Something beneath you clicks ominously.")
./data/maps/vaults/trickvault.lua:		game.logPlayer(actor, "#YELLOW#The world spins around you!")
./data/maps/vaults/trickvault.lua:		game.logPlayer(who, "#YELLOW#The air comes alive with terrible magics!")
./data/maps/vaults/trickvault.lua:		game.logPlayer(actor, "#YELLOW#The world spins around you!")
./data/maps/vaults/auto/greater/orc-hatred.lua:		game.logPlayer(actor, "Something in the floor clicks ominously.")
--------------------------------------------------------------------------------------
./data/talents/corruptions/rot.lua:			game.logPlayer(self, "#GREEN#A carrion worm mass bursts forth from your wounds, softening the blow and reducing damage taken by #ORCHID#" .. math.ceil(damageReduction) .. "#LAST#.")
./data/talents/corruptions/rot.lua:			game.logPlayer(self, "You do not have line of sight to this location.")
./data/talents/corruptions/shadowflame.lua:			game.logPlayer(self, "This spell cannot be used from within the Fearscape.")
./data/talents/corruptions/shadowflame.lua:			game.logPlayer(self, "This spell cannot be cast here.")
./data/talents/corruptions/shadowflame.lua:			game.logPlayer(self, "The spell fizzles...")
./data/talents/corruptions/shadowflame.lua:			game.logPlayer(game.player, "#LIGHT_RED#You are taken to the Fearscape!")
./data/talents/corruptions/shadowflame.lua:			game.logPlayer(game.player, "#LIGHT_RED#You are brought back from the Fearscape!")
./data/talents/corruptions/scourge.lua:			game.logPlayer(self, "You cannot use Rend without two weapons!")
./data/talents/corruptions/scourge.lua:			game.logPlayer(self, "You cannot use Acid Strike without two weapons!")
./data/talents/corruptions/scourge.lua:			game.logPlayer(self, "You cannot use Dark Surprise without two weapons!")
./data/talents/corruptions/bone.lua:		game.logPlayer(self, "Your bone shield absorbs the damage!")
./data/talents/corruptions/sanguisuge.lua:			game.logPlayer(self, "Doing this would kill you.")
./data/talents/corruptions/sanguisuge.lua:			game.logPlayer(self, "There are no foes in sight.")
./data/talents/celestial/guardian.lua:			game.logPlayer(self, "You cannot use Brandish without a shield!")
./data/talents/celestial/guardian.lua:			game.logPlayer(self, "You cannot use Retribution without a shield!")
./data/talents/celestial/guardian.lua:			game.logPlayer(self, "You cannot use Crusade without a shield!")
./data/talents/celestial/crusader.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/celestial/crusader.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/celestial/crusader.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/celestial/combat.lua:					game.logPlayer(self, "#DARK_ORCHID#Your damage shield cannot be extended any farther and has exploded.")
./data/talents/celestial/twilight.lua:			game.logPlayer(self, "You can't use Twilight while Darkest Light is active.")
./data/talents/celestial/twilight.lua:			game.logPlayer(self, "You must sustain the Jumpgate spell to be able to teleport.")
./data/talents/celestial/twilight.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/celestial/twilight.lua:			game.logPlayer(self, "Wrong target!")
./data/talents/celestial/twilight.lua:			game.logPlayer(self, "You must sustain the Jumpgate Two spell to be able to teleport.")
./data/talents/psionic/telekinetic-combat.lua:			game.logPlayer(self, "You cannot do that without a weapon in your hands.")
./data/talents/psionic/psi-archery.lua:			game.logPlayer(self, "You cannot do that without a telekinetically-wielded bow.")
./data/talents/psionic/dreaming.lua:			game.logPlayer(self, "You do not have line of sight to this location.")
./data/talents/psionic/slumber.lua:	on_pre_use = function(self, t, silent) if self:attr("is_psychic_projection") then if not silent then game.logPlayer(self, "You feel it unwise to travel to the dreamscape in such a fragile form.") end return false end return true end,
./data/talents/psionic/slumber.lua:			game.logPlayer(self, "This talent cannot be used from within the Dreamscape.")
./data/talents/psionic/slumber.lua:			game.logPlayer(self, "This talent cannot be used here.")
./data/talents/psionic/slumber.lua:			game.logPlayer(self, "The spell fizzles...")
./data/talents/psionic/slumber.lua:			game.logPlayer(self, "Your target must be sleeping in order to enter its dreamscape.")
./data/talents/psionic/slumber.lua:			game.logPlayer(self, "You can't cast this on friendly targets.")
./data/talents/psionic/slumber.lua:			game.logPlayer(game.player, "#LIGHT_BLUE#You are taken to the Dreamscape!")
./data/talents/psionic/augmented-striking.lua:			game.logPlayer(self, "You cannot do that without a weapon in your hands.")
./data/talents/psionic/augmented-striking.lua:			game.logPlayer(self, "You cannot do that without a weapon in your hands.")
./data/talents/psionic/augmented-striking.lua:			game.logPlayer(self, "You cannot do that without a weapon in your hands.")
./data/talents/psionic/augmented-mobility.lua:			game.logPlayer(self, "The target is out of range")
./data/talents/psionic/projection.lua:			game.logPlayer(self, "The aura dissipates without producing a spike.")
./data/talents/psionic/projection.lua:			game.logPlayer(self, "The aura dissipates without producing a spike.")
./data/talents/psionic/projection.lua:			game.logPlayer(self, "The aura dissipates without producing a spike.")
./data/talents/psionic/mentalism.lua:			game.logPlayer(self, "Not enough space to invoke your spirit!")
./data/talents/psionic/psi-fighting.lua:			game.logPlayer(self, "You cannot do that without a weapon in your hands.")
./data/talents/psionic/psi-fighting.lua:			game.logPlayer(self, "You cannot do that without a weapon in your telekinetic slot.")
./data/talents/psionic/other.lua:			if not silent then game.logPlayer(self, "You require a telekinetically wielded weapon or gem for your psionic focus.") end
./data/talents/psionic/thought-forms.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/psionic/thought-forms.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/psionic/thought-forms.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/psionic/thought-forms.lua:	on_pre_use = function(self, t, silent) if not game.party:findMember{type="thought-form"} then if not silent then game.logPlayer(self, "You must have an active Thought-Form to use this talent!") end return false end return true end,
./data/talents/psionic/nightmare.lua:			game.logPlayer(self, "You can't cast this on friendly targets.")
./data/talents/psionic/nightmare.lua:			game.logPlayer(self, "You can't cast this on friendly targets.")
./data/talents/psionic/discharge.lua:	on_pre_use = function(self, t, silent) if self:getFeedback() <= 0 then if not silent then game.logPlayer(self, "You have no feedback to start a feedback loop!") end return false end return true end,
./data/talents/spells/explosives.lua:			game.logPlayer(self, "You need to ready alchemist gems in your quiver.")
./data/talents/spells/explosives.lua:			game.logPlayer(self, "You need to ready at least two alchemist gems in your quiver.")
./data/talents/spells/staff-combat.lua:	on_pre_use = function(self, t, silent) if not self:hasStaffWeapon() then if not silent then game.logPlayer(self, "You need a staff to use this spell.") end return false end return true end,
./data/talents/spells/staff-combat.lua:			game.logPlayer(self, "You need a staff to use this spell.")
./data/talents/spells/staff-combat.lua:	on_pre_use = function(self, t, silent) if not self:hasStaffWeapon() then if not silent then game.logPlayer(self, "You need a staff to use this spell.") end return false end return true end,
./data/talents/spells/staff-combat.lua:	on_pre_use = function(self, t, silent) if not self:hasStaffWeapon() then if not silent then game.logPlayer(self, "You need a staff to use this spell.") end return false end return true end,
./data/talents/spells/staff-combat.lua:			game.logPlayer(self, "You cannot use Blunt Thrust without a staff weapon!")

./data/talents/spells/golem.lua:		if self:attr("never_move") then game.logPlayer(self, "Your golem cannot do that currently.") return end
./data/talents/spells/golem.lua:				game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/spells/golem.lua:		if self:attr("never_move") then game.logPlayer(self, "Your golem cannot do that currently.") return end
./data/talents/spells/golem.lua:				game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/spells/golem.lua:		if self:attr("never_move") then game.logPlayer(self, "Your golem cannot do that currently.") return end
./data/talents/spells/golem.lua:				game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/spells/eldritch-shield.lua:	on_pre_use = function(self, t, silent) local shield = self:hasShield() if not shield then if not silent then game.logPlayer(self, "You cannot use Eldritch Blow without a shield!") end return false end return true end,
./data/talents/spells/eldritch-shield.lua:		if not self:hasShield() then if not silent then game.logPlayer(self, "You require a shield to use this talent.") end return false end
./data/talents/spells/eldritch-shield.lua:	on_pre_use = function(self, t, silent) local shield = self:hasShield() if not shield then if not silent then game.logPlayer(self, "You cannot use Eldricth Fury without a shield!") end return false end return true end,
./data/talents/spells/eldritch-shield.lua:	on_pre_use = function(self, t, silent) local shield = self:hasShield() if not shield then if not silent then game.logPlayer(self, "You cannot use Eldritch Slam without a shield!") end return false end return true end,
./data/talents/spells/aether.lua:		if game.level.map(x, y, Map.TRAP) then game.logPlayer(self, "You somehow fail to set the aether beam.") return nil end
./data/talents/spells/aether.lua:		if game.level.map:checkEntity(x, y, Map.TERRAIN, "block_move") then game.logPlayer(self, "You somehow fail to set the aether beam.") return nil end
./data/talents/spells/grave.lua:		game.logPlayer(game.player, "Step 2")
./data/talents/spells/water.lua:	on_pre_use = function(self, t, silent) if self:attr("is_shivgoroth") then if not silent then game.logPlayer(self, "You are already a Shivgoroth!") end return false end return true end,
./data/talents/spells/shades.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/spells/stone-alchemy.lua:			game.logPlayer(self, "You create: %s", gem:getName{do_color=true, do_count=true})
./data/talents/spells/stone-alchemy.lua:			game.logPlayer(self, "You extract %s from %s", gem:getName{do_color=true, do_count=true}, o:getName{do_color=true, do_count=true})
./data/talents/spells/stone-alchemy.lua:				game.logPlayer(self, "You imbue your %s with %s.", name, gem:getName{do_colour=true, no_count=true})
./data/talents/spells/stone-alchemy.lua:			game.logPlayer(self, "You need to ready 5 alchemist gems in your quiver.")
./data/talents/spells/animus.lua:						if vocal then game.logPlayer(game.player, "Your husk is out of sight; you cannot establish direct control.") end
./data/talents/spells/divination.lua:			game.logPlayer(self, "#OLIVE_DRAB#Your premonition allows you to raise a shield just in time!")
./data/talents/spells/necrotic-minions.lua:			game.logPlayer(self, "%s rips more animus from its victim. (+1 more soul)", self.name:capitalize())
./data/talents/spells/energy-alchemy.lua:			game.logPlayer(self, "You need to ready alchemist gems in your quiver.")
./data/talents/spells/spells.lua:			game.logPlayer(src, "A soul returns to %s.", src.name)
./data/talents/spells/golemancy.lua:				if vocal then game.logPlayer(game.player, "Your golem is out of sight; you cannot establish direct control.") end
./data/talents/spells/golemancy.lua:			game.logPlayer(self, "Not enough space to refit!")
./data/talents/spells/golemancy.lua:				game.logPlayer(self, "You have been interrupted!")
./data/talents/spells/golemancy.lua:				game.logPlayer(self, "You need to ready 2 alchemist gems in your quiver to heal your golem.")
./data/talents/spells/golemancy.lua:				game.logPlayer(self, "You need to ready 15 alchemist gems in your quiver to heal your golem.")
./data/talents/spells/golemancy.lua:				game.logPlayer(self, "Not enough space to refit!")
./data/talents/spells/golemancy.lua:			game.logPlayer(self, "Your golem is currently inactive.")
./data/talents/spells/golemancy.lua:			game.logPlayer(self, "Not enough space to invoke!")
./data/talents/spells/golemancy.lua:			game.logPlayer(self, "Your golem is currently inactive.")
./data/talents/spells/advanced-golemancy.lua:			game.logPlayer(self, "Your golem is currently inactive.")
./data/talents/spells/advanced-golemancy.lua:				game.logPlayer(self, "Not enough space to supercharge!")
./data/talents/spells/advanced-golemancy.lua:			game.logPlayer(self, "Your golem is currently inactive.")
./data/talents/spells/conveyance.lua:			game.logPlayer(self, "Select a target to teleport...")
./data/talents/spells/conveyance.lua:			game.logPlayer(self, "Select a teleport location...")
./data/talents/spells/conveyance.lua:				game.logPlayer(self, "The targetted phase door fizzles and works randomly!")
./data/talents/spells/conveyance.lua:			game.logPlayer(self, "Select a target to teleport...")
./data/talents/spells/conveyance.lua:			game.logPlayer(self, "Select a teleport location...")
./data/talents/spells/conveyance.lua:				game.logPlayer(self, "The targetted teleport fizzles and works randomly!")

------------------------
./data/talents/techniques/bow.lua:		if not self:hasArcheryWeapon("bow") then game.logPlayer(self, "You must wield a bow!") return nil end
./data/talents/techniques/bow.lua:		if not self:hasArcheryWeapon("bow") then game.logPlayer(self, "You must wield a bow!") return nil end
./data/talents/techniques/bow.lua:		if not self:hasArcheryWeapon("bow") then game.logPlayer(self, "You must wield a bow!") return nil end
./data/talents/techniques/reflexes.lua:			game.logPlayer(self, ({
./data/talents/techniques/reflexes.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/sniper.lua:			game.logPlayer(self, ({
./data/talents/techniques/sniper.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/sniper.lua:		if not silent then game.logPlayer("You require a ranged weapon and a shield to use this talent.") end
./data/talents/techniques/sniper.lua:				if not silent then game.logPlayer(self, "You are being observed too closely to enter Concealment!") end
./data/talents/techniques/assassination.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/techniques/assassination.lua:			game.logPlayer(self, "You cannot use Coup de Grace without dual wielding!")
./data/talents/techniques/sling.lua:		if not self:hasArcheryWeapon("sling") then game.logPlayer(self, "You must wield a sling!") return nil end
./data/talents/techniques/sling.lua:		if not self:hasArcheryWeapon("sling") then game.logPlayer(self, "You must wield a sling!") return nil end
./data/talents/techniques/sling.lua:		if not self:hasArcheryWeapon("sling") then game.logPlayer(self, "You must wield a sling!") return nil end
./data/talents/techniques/duelist.lua:			if not silent then game.logPlayer(self, "You must be able to move to use this talent.") end
./data/talents/techniques/duelist.lua:				game.logPlayer(self, "%s cannot move!", target.name:capitalize())
./data/talents/techniques/duelist.lua:			if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end
./data/talents/techniques/duelist.lua:			game.logPlayer(self, "You cannot use Lunge without dual wielding!")
./data/talents/techniques/combat-techniques.lua:			game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Shield Pummel without a shield!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Shield Slam without a shield!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Assault without a shield!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Shield Wall without a shield!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Repulsion without a shield!")
./data/talents/techniques/weaponshield.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/techniques/weaponshield.lua:			game.logPlayer(self, "You cannot use Last Stand without a shield!")
./data/talents/techniques/unarmed-discipline.lua:	--on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_COMBO) then if not silent then game.logPlayer(self, "You must have a combo going to use this ability.") end return false end return true end,
./data/talents/techniques/acrobatics.lua:			if not silent then game.logPlayer(self, "You cannot move!") end
./data/talents/techniques/acrobatics.lua:			game.logPlayer(self, "You must have an empty space to land in.")
./data/talents/techniques/acrobatics.lua:			game.logPlayer(self, "You need someone adjacent to vault over.")
./data/talents/techniques/acrobatics.lua:			if not silent then game.logPlayer(self, "You cannot move!") end
./data/talents/techniques/acrobatics.lua:			game.logPlayer(self, "You must have an empty space to roll to.")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Death Dance without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Berserker without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Warshout without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Death Blow without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Stunning Blow without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Sunder Armour without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Sunder Arms without a two-handed weapon!")
./data/talents/techniques/2hweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2hweapon.lua:			game.logPlayer(self, "You cannot use Blood Frenzy without a two-handed weapon!")
./data/talents/techniques/excellence.lua:			game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/techniques/marksmanship.lua:			game.logPlayer(self, ({
./data/talents/techniques/marksmanship.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/finishing-moves.lua:	--on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_COMBO) then if not silent then game.logPlayer(self, "You must have a combo going to use this ability.") end return false end return true end,
./data/talents/techniques/finishing-moves.lua:	--on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_COMBO) then if not silent then game.logPlayer(self, "You must have a combo going to use this ability.") end return false end return true end,
./data/talents/techniques/finishing-moves.lua:	--on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_COMBO) then if not silent then game.logPlayer(self, "You must have a combo going to use this ability.") end return false end return true end,
./data/talents/techniques/strength-of-the-berserker.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/strength-of-the-berserker.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/strength-of-the-berserker.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/strength-of-the-berserker.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() or self:getStamina() > self:getMaxStamina() * 0.3 then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/dualweapon.lua:			if not silent then game.logPlayer(self, "You must dual wield to use this talent.") end
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You must dual wield to manage contact with your target!")
./data/talents/techniques/dualweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You must dual wield to perform an Offhand Jab!")
./data/talents/techniques/dualweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You cannot use Dual Strike without dual wielding!")
./data/talents/techniques/dualweapon.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You cannot use Flurry without dual wielding!")
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You require two weapons to use this talent.") 
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "You require two weapons to use this talent.") 
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "The target location must be within range and within view.")
./data/talents/techniques/dualweapon.lua:			game.logPlayer(self, "There is no open space in which to land near there.")
./data/talents/techniques/combat-training.lua:					game.logPlayer(self, "You cannot use your %s anymore.", o:getName{do_color=true})
./data/talents/techniques/munitions.lua:			game.logPlayer(self, ({
./data/talents/techniques/munitions.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/munitions.lua:			if not silent then game.logPlayer(self, "You require incendiary, venomous or piercing ammunition to use this talent!") end
./data/talents/techniques/buckler-training.lua:		if not silent then game.logPlayer("You require a ranged weapon and a shield to use this talent.") end
./data/talents/techniques/buckler-training.lua:			game.logPlayer(self, "You require a ranged weapon and a shield to use this talent.")
./data/talents/techniques/conditioning.lua:	on_pre_use = function(self, t, silent) if t.getMinimumLife(self, t) > self.life then if not silent then game.logPlayer(self, "You are too injured to use this talent.") end return false end return true end,
./data/talents/techniques/mobility.lua:		if not silent then game.logPlayer(self, "You must be able to move to use %s!", t.name) end
./data/talents/techniques/mobility.lua:		if not silent then game.logPlayer(self, "%s is not usable while wearing heavy armour.", t.name) end
./data/talents/techniques/mobility.lua:			if not silent then game.logPlayer(self, "You must be able to move to use %s!", t.name) end
./data/talents/techniques/mobility.lua:			game.logPlayer(self, "You must disengage directly away from your target in a straight line.")
./data/talents/techniques/mobility.lua:			game.logPlayer(self, "You must land in an empty space.")
./data/talents/techniques/mobility.lua:					game.logPlayer(self, "Your Disengage was partially blocked.")
./data/talents/techniques/mobility.lua:				game.logPlayer(self, "You are not able to Disengage in that direction.")
./data/talents/techniques/mobility.lua:			game.logPlayer(self, "You must have an empty space to roll to.")
./data/talents/techniques/mobility.lua:			if not silent then game.logPlayer(self, "%s is not usable while wearing heavy armour.", t.name) end
./data/talents/techniques/agility.lua:			game.logPlayer(self, ({
./data/talents/techniques/agility.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/agility.lua:		if not silent then game.logPlayer("You require a ranged weapon and a shield to use this talent.") end
./data/talents/techniques/agility.lua:			game.logPlayer(self, "You require a shield to use this talent.")
./data/talents/techniques/agility.lua:			game.logPlayer(self, "You are too close to build up momentum!")
./data/talents/techniques/agility.lua:			game.logPlayer(self, "You cannot use Rapid Fire without a bow or sling!")
./data/talents/techniques/archery.lua:			game.logPlayer(self, ({
./data/talents/techniques/archery.lua:			if not silent then game.logPlayer(self, "You do not have enough ammo left!") end
./data/talents/techniques/2h-assault.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2h-assault.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2h-assault.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2h-assault.lua:			game.logPlayer(self, "You cannot use Death Dance without a two-handed weapon!")
./data/talents/techniques/2h-assault.lua:	on_pre_use = function(self, t, silent) if not self:hasTwoHandedWeapon() then if not silent then game.logPlayer(self, "You require a two handed weapon to use this talent.") end return false end return true end,
./data/talents/techniques/2h-assault.lua:--		game.logPlayer(self, "perc " .. perc .. " power " .. power) -- debugging code
./data/talents/cursed/cursed-aura.lua:			game.logPlayer(self, "You cannot use %s without a weapon in your inventory!", t.name)
./data/talents/cursed/cursed-aura.lua:			game.logPlayer(self, "Your animated sentry struggles for a moment and then drops to the ground inexplicably.")
./data/talents/cursed/gloom.lua:						game.logPlayer(self, "#F53CBE#Your heart hardens as a powerful foe enters your gloom! (+%d hate)", hateGain)
./data/talents/cursed/gloom.lua:		--	game.logPlayer(self, "#F53CBE#You leech %0.1f life from your foes.", lifeLeeched)
./data/talents/cursed/shadows.lua:			game.logPlayer(self, "Your hate is too low to call another shadow!", deflectDamage)
./data/talents/cursed/shadows.lua:				game.logPlayer(self, "Their are no shadows to heed the call!")
./data/talents/cursed/shadows.lua:				game.logPlayer(self, "Their are no shadows to heed the call!")
./data/talents/cursed/punishments.lua:			game.logPlayer(self, "You renew the cursed mark.")
./data/talents/cursed/advanced-shadowmancy.lua:			game.logPlayer(self, "You need a shadow in sight range!")
./data/talents/cursed/advanced-shadowmancy.lua:			game.logPlayer(self, "You need a shadow in sight range!")
./data/talents/cursed/rampage.lua:			if not silent then game.logPlayer(self, "You are already rampaging!") end
./data/talents/cursed/rampage.lua:			if not silent then game.logPlayer(self, "You must be rampaging to use this talant.") end
./data/talents/cursed/rampage.lua:			if not silent then game.logPlayer(self, "You must be rampaging to use this talant.") end
./data/talents/cursed/rampage.lua:			game.logPlayer(self, "#F53CBE#Your rampage is invigorated by the collosal slam! (+1 duration)")
./data/talents/cursed/dark-figure.lua:			game.logPlayer(self, "You are too far to from the target!")
./data/talents/cursed/dark-figure.lua:--			game.logPlayer(self, "You have identified the %s.", object:getName{no_count=true})
./data/talents/cursed/dark-sustenance.lua:			game.logPlayer(self, "You can only gain sustenance from your foes!");
./data/talents/cursed/dark-sustenance.lua:				game.logPlayer(self, "You must begin feeding before you can Devour Life.");
./data/talents/cursed/force-of-will.lua:				game.logPlayer(self, "You have deflected %d incoming damage!", deflectDamage)
./data/talents/cursed/primal-magic.lua:		game.logPlayer(self, "Selects a displacement location...")
./data/talents/cursed/gestures.lua:			game.logPlayer(self, "You require two free or mindstar-equipped hands to use Gesture of Pain.")
./data/talents/cursed/gestures.lua:			   game.logPlayer(self, "#F53CBE#You revel in attacking a weakened foe! (+%d hate)", effGloomWeakness.hateBonus)
./data/talents/cursed/endless-hunt.lua:			game.logPlayer(self, "#F53CBE#You are having trouble focusing on your prey!")
./data/talents/chronomancy/chronomancy.lua:				game.logPlayer(self, "#LIGHT_RED#Your Contingency has failed to cast %s!", self:getTalentFromId(cont_t).name)
./data/talents/chronomancy/chronomancy.lua:				game.logPlayer(self, "#STEEL_BLUE#Your Contingency triggered %s!", self:getTalentFromId(cont_t).name)
./data/talents/chronomancy/chronomancy.lua:				game.logPlayer(self, "The timeline is too fractured to do this now.")
./data/talents/chronomancy/chronomancy.lua:				game.logPlayer(self, "You've seen as much as you can here.")
./data/talents/chronomancy/flux.lua:	on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_TWIST_FATE) then if not silent then game.logPlayer(self, "You must have a twisted anomaly to cast this spell.") end return false end return true end,
./data/talents/chronomancy/flux.lua:			game.logPlayer(self, "#STEEL_BLUE#Casts %s.", anom.name)
./data/talents/chronomancy/flux.lua:		game.logPlayer(self, "#STEEL_BLUE#You take control of %s.", self:getTalentFromId(talent).name or nil)
./data/talents/chronomancy/guardian.lua:				game.logPlayer(self, "Not enough space to summon warden!")
./data/talents/chronomancy/guardian.lua:	on_pre_use = function(self, t, silent) if self:attr("disarmed") then if not silent then game.logPlayer(self, "You require a weapon to use this talent.") end return false end return true end,
./data/talents/chronomancy/guardian.lua:		if not x or not y or not target then game.logPlayer(self, "You must pick a focus target.")return nil end
./data/talents/chronomancy/induced-phenomena.lua:		game.logPlayer(self, "#LIGHT_BLUE#Your cosmic cycle expands.")
./data/talents/chronomancy/induced-phenomena.lua:		game.logPlayer(self, "#LIGHT_RED#Your cosmic cycle contracts.")
./data/talents/chronomancy/induced-phenomena.lua:	on_pre_use = function(self, t, silent) if not self:isTalentActive(self.T_COSMIC_CYCLE) then if not silent then game.logPlayer(self, "You must have Cosmic Cycle active to use this talent.") end return false end return true end,
./data/talents/chronomancy/spacetime-weaving.lua:			game.logPlayer(self, "You do not have line of sight.")
./data/talents/chronomancy/spacetime-weaving.lua:		if trap or game.level.map:checkEntity(entrance_x, entrance_y, Map.TERRAIN, "block_move") then game.logPlayer(self, "You can't place a wormhole entrance here.") return end
./data/talents/chronomancy/spacetime-weaving.lua:		if trap or game.level.map:checkEntity(exit_x, exit_y, Map.TERRAIN, "block_move") or core.fov.distance(entrance_x, entrance_y, exit_x, exit_y) < 2 then game.logPlayer(self, "You can't place a wormhole exit here.") return end
./data/talents/chronomancy/threaded-combat.lua:	on_pre_use = function(self, t, silent) if self:attr("disarmed") then if not silent then game.logPlayer(self, "You require a weapon to use this talent.") end return false end return true end,
./data/talents/chronomancy/threaded-combat.lua:			game.logPlayer(self, "range %d", range)
./data/talents/chronomancy/threaded-combat.lua:			game.logPlayer(self, "You cannot use Thread Walk without an appropriate weapon!")
./data/talents/chronomancy/threaded-combat.lua:	on_pre_use = function(self, t, silent) if self:attr("disarmed") then if not silent then game.logPlayer(self, "You require a weapon to use this talent.") end return false end return true end,
./data/talents/chronomancy/threaded-combat.lua:			game.logPlayer(self, "You cannot use Thread the Needle without an appropriate weapon!")
./data/talents/chronomancy/timeline-threading.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/chronomancy/timeline-threading.lua:				game.logPlayer(self, "The timeline is too fractured to do this now.")
./data/talents/chronomancy/blade-threading.lua:	on_pre_use = function(self, t, silent) if not doWardenPreUse(self, "dual") then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/chronomancy/blade-threading.lua:	on_pre_use = function(self, t, silent) if not doWardenPreUse(self, "dual") then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/chronomancy/blade-threading.lua:	on_pre_use = function(self, t, silent) if not doWardenPreUse(self, "dual") then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/chronomancy/blade-threading.lua:	on_pre_use = function(self, t, silent) if not doWardenPreUse(self, "dual") then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/chronomancy/temporal-combat.lua:	on_pre_use = function(self, t, silent) if self:attr("disarmed") then if not silent then game.logPlayer(self, "You require a weapon to use this talent.") end return false end return true end,
./data/talents/chronomancy/anomalies.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/talents/chronomancy/anomalies.lua:					game.logPlayer(who, "%s forces the tear shut!", who.name:capitalize())
./data/talents/chronomancy/timetravel.lua:		if (oe and oe:attr("temporary")) or game.level.map:checkEntity(x, y, Map.TERRAIN, "block_move") then game.logPlayer(self, "Something has prevented the timetravel.") return true end
./data/talents/chronomancy/timetravel.lua:			game.logPlayer(self, "This talent cannot be used from within the reprieve.")
./data/talents/chronomancy/timetravel.lua:			game.logPlayer(self, "This talent cannot be used here.")
./data/talents/chronomancy/timetravel.lua:			game.logPlayer(self, "The spell fizzles...")
./data/talents/chronomancy/timetravel.lua:			game.logPlayer(game.player, "#STEEL_BLUE#You time travel to a quiet place.")
./data/talents/chronomancy/spacetime-folding.lua:		if (oe and oe:attr("temporary")) or game.level.map:checkEntity(x, y, Map.TERRAIN, "block_move") then game.logPlayer(self, "You can't place a tether here") return nil end
./data/talents/chronomancy/temporal-hounds.lua:				game.logPlayer(self, "Temporal Hounds must be sustained to cast this spell.")
./data/talents/chronomancy/temporal-hounds.lua:			game.logPlayer(self, "You do not have line of sight.")
./data/talents/chronomancy/temporal-hounds.lua:				game.logPlayer(self, "You must have temporal hounds to use this talent.")
./data/talents/chronomancy/other.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/chronomancy/other.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/misc/npcs.lua:		if not self.can_multiply or self.can_multiply <= 0 then game.logPlayer(self, "You can not multiply anymore.") return nil end
./data/talents/misc/npcs.lua:		if not self:canBe("summon") then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/misc/npcs.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/talents/misc/npcs.lua:		if self:attr("never_move") then game.logPlayer(self, "You cannot do that currently.") return end
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot use Crush without a two-handed weapon!")
./data/talents/misc/npcs.lua:			game.logPlayer(self, "Not enough space to invoke!")
./data/talents/misc/npcs.lua:			game.logPlayer(self, "Not enough space to invoke!")
./data/talents/misc/npcs.lua:	--on_pre_use = function(self, t, silent) if not self:hasEffect(self.EFF_COMBO) then if not silent then game.logPlayer(self, "You must have a combo going to use this ability.") end return false end return true end,
./data/talents/misc/npcs.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a weapon and a shield to use this talent.") end return false end return true end,
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot use Overpower without a shield!")
./data/talents/misc/npcs.lua:		if not q then if not silent then game.logPlayer(self, "You must have a quiver or pouch equipped.") end return false end
./data/talents/misc/npcs.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot use Sweep without dual wielding!")
./data/talents/misc/npcs.lua:		if self:attr("never_move") then game.logPlayer(self, "You can not do that currently.") return end
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot dash through that!")
./data/talents/misc/npcs.lua:			if not silent then game.logPlayer(self, "You cannot be stealthy with such heavy armour on!") end
./data/talents/misc/npcs.lua:	on_pre_use = function(self, t, silent) if not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two weapons to use this talent.") end return false end return true end,
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot use Precision without dual wielding!")
./data/talents/misc/npcs.lua:	on_pre_use = function(self, t, silent) if self:hasArcheryWeapon() or not self:hasDualWeapon() then if not silent then game.logPlayer(self, "You require two melee weapons to use this talent.") end return false end return true end,
./data/talents/misc/npcs.lua:			game.logPlayer(self, "You cannot use Momentum without dual wielding melee weapons!")
./data/talents/misc/inscriptions.lua:			game.logPlayer(self, "The targetted phase door fizzles and works randomly!")
./data/talents/misc/inscriptions.lua:				game.logPlayer(self, "Your negative mana regeneration rate is unaffected by the rune.")
./data/talents/misc/inscriptions.lua:				game.logPlayer(self, "Your nonexistant mana regeneration rate is unaffected by the rune.")
./data/talents/misc/inscriptions.lua:		if (oe and oe:attr("temporary")) or game.level.map:checkEntity(x, y, Map.TERRAIN, "block_move") then game.logPlayer(self, "Something has prevented the timetravel.") return true end
./data/talents/misc/objects.lua:			game.logPlayer(self, "You must be holding a staff.")
./data/talents/misc/objects.lua:	on_pre_use = function(self, t, silent) if not self:hasShield() then if not silent then game.logPlayer(self, "You require a shield to use this talent.") end return false end return true end,
./data/talents/misc/objects.lua:			game.logPlayer(self, "You overdose on the honeyroot sap!")
./data/talents/misc/objects.lua:		if not best then game.logPlayer(self, "You require a digger to dig.") return end
./data/talents/misc/objects.lua:				game.logPlayer(self, "You have been interrupted!")
./data/talents/misc/objects.lua:	on_pre_use = function(self, t, silent) if self:attr("is_shivgoroth") then if not silent then game.logPlayer(self, "You are already a Shivgoroth!") end return false end return true end,
./data/talents/misc/races.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/talents/misc/races.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/talents/misc/races.lua:			game.logPlayer(self, "#PURPLE#Your mastery over inscriptions is unmatched! One more inscriptions slot available to buy.")
./data/talents/misc/misc.lua:			game.logPlayer(self, hateMessage.." (+%d hate)", hateGain - self.hate_per_kill)
./data/talents/misc/misc.lua:			game.logPlayer(self, "The spell fizzles...")
./data/talents/misc/misc.lua:			game.logPlayer(self, "The spell fizzles...")
./data/talents/misc/horrors.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/talents/misc/horrors.lua:			game.logPlayer(self, "Not enough space to invoke!")
./data/talents/cunning/artifice.lua:			if not silent then game.logPlayer(self, "You must have Hidden Blades prepared to use this talent.") end
./data/talents/cunning/artifice.lua:			game.logPlayer(self, "You are too close to your target to swing your hook effectively!")
./data/talents/cunning/artifice.lua:					if self:attr("never_move") then game.logPlayer(self, "You cannot move!") ok = false return end
./data/talents/cunning/artifice.lua:					if self:attr("never_move") then game.logPlayer(self, "You cannot move!") ok = false return end
./data/talents/cunning/artifice.lua:						game.logPlayer(self, "You need more room to swing your hook effectively.")
./data/talents/cunning/artifice.lua:					game.logPlayer(self, "You must anchor the hook to something solid.")
./data/talents/cunning/survival.lua:				game.logPlayer(self, "#CADET_BLUE#You don't have the skill to disarm traps.")
./data/talents/cunning/survival.lua:				game.logPlayer(self, "#CADET_BLUE#You cannot disarm traps in grids you cannot enter.")
./data/talents/cunning/survival.lua:			game.logPlayer(self, "#CADET_BLUE#You don't see a trap there.")
./data/talents/cunning/stealth.lua:			if not silent then game.logPlayer(self, "You cannot be stealthy with such heavy armour on!") end
./data/talents/cunning/stealth.lua:				if not silent then game.logPlayer(self, "You are being observed too closely to enter Stealth!") end
./data/talents/cunning/ambush.lua:			game.logPlayer(self, "Not enough space to invoke your shadow!")
./data/talents/cunning/traps.lua:	game.logPlayer(self, "#CADET_BLUE#Placing %s...", t.name or "trap")
./data/talents/cunning/traps.lua:			game.logPlayer(self, "You cannot place a trap there.") return nil
./data/talents/cunning/traps.lua:			game.logPlayer(self, trap:knownBy(self) and game.level.map.seens(x, y) and "There is already a trap there." or "You somehow fail to set the trap.") return nil 
./data/talents/cunning/traps.lua:						game.logPlayer(self.summoner, "#CADET_BLUE#Your %s has expired.", self.name)
./data/talents/cunning/traps.lua:		if not changed then game.logPlayer(self, "#LIGHT_BLUE#No changes to trap preparation.") end
./data/talents/cunning/traps.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/cunning/traps.lua:			game.logPlayer(self, "#LIGHT_BLUE#Cancelled Trap Priming.")
./data/talents/cunning/traps.lua:				game.logPlayer(self, "#YELLOW_GREEN#Dismantling %s (instant trigger)", self:getTalentFromId(old_trap).name)
./data/talents/cunning/traps.lua:				game.logPlayer(self, "#LIGHT_GREEN#Preparing %s (instant trigger)", self:getTalentFromId(new_trap).name)
./data/talents/cunning/traps.lua:				if (oe and oe:attr("temporary")) or game.level.map:checkEntity(x, y, engine.Map.TERRAIN, "block_move") then game.logPlayer(self, "Something has prevented the pit.") return true end
./data/talents/cunning/traps.lua:			game.logPlayer(self, "#LIGHT_BLUE#Aim the catapult")
./data/talents/cunning/shadow-magic.lua:		if self:attr("never_move") then game.logPlayer(self, "You cannot do that currently.") return end
./data/talents/gifts/gifts.lua:			game.logPlayer(self, "#PINK#You can manage a maximum of %d summons at any time. You need %d Cunning to increase your limit.", nb, math.max((nb+1)*10, (nb+1)^2))
./data/talents/gifts/corrosive-blades.lua:		if game.level.map(x, y, Map.TRAP) then game.logPlayer(self, "You somehow fail to set the corrosive seed.") return nil end
./data/talents/gifts/mindstar-mastery.lua:	on_pre_use = function(self, t, silent) if not self:hasPsiblades(true, false) then if not silent then game.logPlayer(self, "You require a psiblade in your mainhand to use this talent.") end return false end return true end,
./data/talents/gifts/mindstar-mastery.lua:	on_pre_use = function(self, t, silent) if not self:hasPsiblades(true, true) then if not silent then game.logPlayer(self, "You require two psiblades in your hands to use this talent.") end return false end return true end,
./data/talents/gifts/mindstar-mastery.lua:	on_pre_use = function(self, t, silent) if not self:hasPsiblades(true, true) then if not silent then game.logPlayer(self, "You require two psiblades in your hands to use this talent.") end return false end return true end,
./data/talents/gifts/ooze.lua:			game.logPlayer(self, "You try to split, but there is no free space close enough to summon!")
./data/talents/gifts/summon-distance.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-distance.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-distance.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-distance.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-distance.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-distance.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-distance.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-distance.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-utility.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-utility.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-utility.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-utility.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-augmentation.lua:			game.logPlayer("You may not detonate this summon.")
./data/talents/gifts/summon-melee.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-melee.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-melee.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-melee.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-melee.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-melee.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/talents/gifts/summon-melee.lua:		if not self:canBe("summon") and not silent then game.logPlayer(self, "You cannot summon; you are suppressed!") return end
./data/talents/gifts/summon-melee.lua:			game.logPlayer(self, "Not enough space to summon!")
./data/timed_effects/mental.lua:						game.logPlayer(self, "#F53CBE#You panic and flee from %s.", eff.src.name)
./data/timed_effects/mental.lua:				game.logPlayer(self, "#F53CBE#Your rampage is invigorated by the intense onslaught! (+1 duration)")
./data/timed_effects/mental.lua:			game.logPlayer(self, "#F53CBE#You feel your rampage slowing down. (-1 duration)")
./data/timed_effects/mental.lua:				game.logPlayer(self, "#F53CBE#The death of your prey feeds your hate. (+%d hate)", eff.hateBonus)
./data/timed_effects/magical.lua:					game.logPlayer(self, "You are yanked out of this place!")
./data/timed_effects/magical.lua:			game.logPlayer(self, "Space restabilizes around you.")
./data/timed_effects/magical.lua:					game.logPlayer(self, "You are yanked out of this time!")
./data/timed_effects/magical.lua:			game.logPlayer(self, "Time restabilizes around you.")
./data/timed_effects/magical.lua:		game.logPlayer(self, "Your %s ward absorbs the damage!", DamageType.dam_def[eff.d_type].name)
./data/timed_effects/physical.lua:			game.logPlayer(self, "#ORCHID#You cannot block any more attacks!#LAST#")
./data/timed_effects/physical.lua:				--game.logPlayer(self, "Not enough space to invoke!")
./data/timed_effects/physical.lua:					--game.logPlayer(self, "Not enough space to invoke!")
./data/timed_effects/physical.lua:	on_gain = function(self, err) game.logPlayer(self, "#GREY#You begin your Shadow Dance.") end,
./data/timed_effects/physical.lua:	on_lose = function(self, err) game.logPlayer(self, "#GREY#You end your Shadow Dance.") end,
./data/timed_effects/physical.lua:				game.logPlayer(self, "You have been detected!")
./data/timed_effects/other.lua:				game.logPlayer(self, "#LIGHT_RED#You lost sight of your golem for too long; direct control is broken!")
./data/timed_effects/other.lua:				game.logPlayer(self, "#LIGHT_RED#You lost sight of your shadow for too long; it dissipates!")
./data/timed_effects/other.lua:				game.logPlayer(self, "#LIGHT_RED#You lost sight of your husk for too long; it disintegrates!")
./data/timed_effects/other.lua:				game.logPlayer(game.player, "#LIGHT_BLUE#You unfold the space time continuum to the start of the time threads!")
./data/timed_effects/other.lua:			game.logPlayer(self, "#LIGHT_BLUE#You've been pulled into the past!")
./data/timed_effects/other.lua:			game.logPlayer(game.player, "#LIGHT_BLUE#You've been returned to the present!")
./data/timed_effects/other.lua:		game.logPlayer(self, "#LIGHT_BLUE#You enter a zero gravity zone, beware!")
./data/timed_effects/other.lua:				game.logPlayer(self, "Not enough space to summon!")
./data/timed_effects/other.lua:			game.logPlayer(game.player, "#LIGHT_BLUE#You are brought back from the Dreamscape!")
./data/timed_effects/other.lua:			game.logPlayer(game.player, "#LIGHT_BLUE#You go back in time to rewrite history!")
./data/timed_effects/other.lua:			game.logPlayer(game.player, "#STEEL_BLUE#You are brought back from your repreive!")
./data/timed_effects/other.lua:					game.logPlayer(self, "You are yanked out of this place!")
./data/timed_effects/other.lua:			game.logPlayer(self, "Space restabilizes around you.")
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s has chosen an actor.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s is about to blindside.", self.name:capitalize())
./mod/ai/shadow.lua:				--game.logPlayer(self.summoner, "#PINK#%s -> blindside", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s is about to attack.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s -> move_complex", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s is about to phase door.", self.name:capitalize())
./mod/ai/shadow.lua:				--game.logPlayer(self.summoner, "#PINK#%s -> phase door", self.name:capitalize())
./mod/ai/shadow.lua:					--game.logPlayer(self.summoner, "#PINK#%s move fails", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s -> move", self.name:capitalize())
./mod/ai/shadow.lua:	--game.logPlayer(self.summoner, "#PINK#%s BEGINS.", self.name:capitalize())
./mod/ai/shadow.lua:		game.logPlayer(self.summoner, "#PINK#%s returns to the shadows.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s is out of range.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s -> phase door", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s is out of time for target.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s choose an actor.", self.name:capitalize())
./mod/ai/shadow.lua:		--game.logPlayer(self.summoner, "#PINK#%s choose a location.", self.name:capitalize())
./mod/ai/shadow.lua:	--game.logPlayer(self.summoner, "#PINK#%s -> failed to make a move.", self.name:capitalize())
./mod/dialogs/UnlockDialog.lua:	game.logPlayer(game.player, "#VIOLET#Option unlocked: "..self.name)
./mod/dialogs/CharacterSheet.lua:						game.logPlayer(self.actor, "#RED#Displaying %s set for %s (equipment NOT switched)", self.equip_set, self.actor.name:capitalize())
./mod/dialogs/TrapsSelect.lua:			game.logPlayer(self.actor, "#LIGHT_BLUE#You cannot prepare this trap: %s.", item.unlearnable)
./mod/dialogs/TrapsSelect.lua:			game.logPlayer(self.actor, "#LIGHT_BLUE#You need more skill to prepare this trap.")
./mod/dialogs/TrapsSelect.lua:				game.logPlayer(self.actor, "#LIGHT_BLUE#Preparing trap with normal trigger.")
./mod/dialogs/TrapsSelect.lua:				game.logPlayer(self.actor, "#LIGHT_BLUE#You cannot prepare more than %d traps.", self.max_traps)
./mod/dialogs/SentientWeapon.lua:	--end, select=function(item, sel) self.sel = sel game.logPlayer(game.player, "just selected %s", sel)  end}
./mod/dialogs/SentientWeapon.lua:	--end, select=function(item, sel) self.sel = sel game.logPlayer(game.player, "just selected %s", item.stat_id)  end}
./mod/dialogs/SentientWeapon.lua:				game.logPlayer(self.actor, "#LIGHT_BLUE#Warning: You have increased some of your statistics. Talent %s is actually sustained; if it is dependent on one of the stats you changed, you need to re-use it for the changes to take effect.", t.name)
./mod/dialogs/DeathDialog.lua:		game.logPlayer(self.actor, "#LIGHT_BLUE#You resurrect! CHEATER!")
./mod/dialogs/DeathDialog.lua:		game.logPlayer(self.actor, "#LIGHT_RED#The Blood of Life rushes through your dead body. You come back to life!")
./mod/dialogs/DeathDialog.lua:		game.logPlayer(self.actor, "#YELLOW#Your bones magically knit back together. You are once more able to dish out pain to your foes!")
./mod/dialogs/DeathDialog.lua:		game.logPlayer(self.actor, "#YELLOW#Your %s is consumed and disappears! You come back to life!", o:getName{do_colour=true})
./mod/dialogs/DeathDialog.lua:		game.logPlayer(self, "You managed to die on the eidolon plane! DIE!")
./mod/dialogs/orders/Behavior.lua:	game.logPlayer(game.player, "%s behavior set to %s.", self.actor.name:capitalize(), item.set)
./mod/dialogs/ArenaFinish.lua:		game.logPlayer(self.actor, "#LIGHT_BLUE#You resurrect! CHEATER !")
./mod/dialogs/LevelupDialog.lua:		game.logPlayer(self.actor, txt:format(talents))
./mod/class/BigNews.lua:	game.logPlayer(game.player, txt, ...)
./mod/class/Player.lua:		game.logPlayer(self, "#YELLOW_GREEN#There is "..g.name:a_an().." here (press '<', '>' or right click to use).")
./mod/class/Player.lua:		game.logPlayer(self, "#FF0000#You carry too much--you are encumbered!")
./mod/class/Player.lua:		game.logPlayer(self, "#FF0000#Drop some of your items.")
./mod/class/Player.lua:			game.logPlayer(self, "#PINK#Your summoned %s disappears.", self.name)
./mod/class/Player.lua:			game.logPlayer(self, "Automatic use of talent %s #DARK_RED#skipped#LAST#: cooldown too low (%d).", self:getTalentDisplayName(t), cd)
./mod/class/Player.lua:	if not game.zone or game.zone.wilderness then game.logPlayer(self, "You cannot use items on the world map.") return end
./mod/class/Player.lua:				game.logPlayer(self, "Your antimagic disrupts %s.", o:getName{no_count=true, do_color=true})
./mod/class/Player.lua:	if portal.message then game.logPlayer(self, portal.message) end
./mod/class/Player.lua:		game.logPlayer(self, "This does not seem to have any effect.")
./mod/class/Player.lua:	game.logPlayer(self, "You use the %s on the pedestal. There is a distant 'clonk' sound.", o:getName{do_colour=true})
./mod/class/Player.lua:			game.logPlayer(self, "#LIGHT_RED#%s briefly catches sight of you!", act.name:capitalize())
./mod/class/Player.lua:			game.logPlayer(self, "#LIGHT_RED#Something briefly catches sight of you!")
./mod/class/Player.lua:	game.logPlayer(game.player, "#LIGHT_GREEN#Accepted quest '%s'! #WHITE#(Press 'j' to see the quest log)", quest.name)
./mod/class/Player.lua:		game.logPlayer(game.player, "#LIGHT_GREEN#Quest '%s' status updated! #WHITE#(Press 'j' to see the quest log)", quest.name)
./mod/class/Player.lua:		game.logPlayer(game.player, "#LIGHT_GREEN#Quest '%s' completed! #WHITE#(Press 'j' to see the quest log)", quest.name)
./mod/class/Player.lua:		game.logPlayer(game.player, "#LIGHT_GREEN#Quest '%s' is done! #WHITE#(Press 'j' to see the quest log)", quest.name)
./mod/class/Player.lua:		game.logPlayer(game.player, "#LIGHT_RED#Quest '%s' is failed! #WHITE#(Press 'j' to see the quest log)", quest.name)
./mod/class/Party.lua:		if vocal then game.logPlayer(game.player, "Can not switch control to this creature.") end
./mod/class/Party.lua:	game.logPlayer(actor, "#MOCCASIN#Character control switched to %s.", actor.name)
./mod/class/Party.lua:		if vocal then game.logPlayer(game.player, "Can not give orders to this creature.") end
./mod/class/Party.lua:			game.logPlayer(game.player, "%s maximum action radius set to %d.", actor.name:capitalize(), actor.ai_state.tactic_leash)
./mod/class/Party.lua:				game.logPlayer(game.player, "%s will stay near %s.", actor.name:capitalize(), anchor.name)
./mod/class/FortressPC.lua:				game.logPlayer(self, "You are unable to move!")
./mod/class/FortressPC.lua:				game.logPlayer(self, "You have found a trap (%s)!", trap:getName())
./mod/class/interface/ActorObjectUse.lua:			game.logPlayer(self, msg)
./mod/class/interface/Archery.lua:		game.logPlayer(self, "You need a missile launcher (%s)!", ammo)
./mod/class/interface/Archery.lua:		game.logPlayer(self, "You do not have enough ammo left!")
./mod/class/interface/Archery.lua:				game.logPlayer(self, "#ORCHID#Your %s CANNOT SHOOT (Resource: %s%s#LAST#).", weapon:getName({do_color=true, no_add_name=true}), table.get(self.resources_def[kind], "color") or "#SALMON#", table.get(self.resources_def[kind], "name") or kind:capitalize())
./mod/class/interface/Archery.lua:				game.logPlayer(self, "#ORCHID#Your %s CANNOT SHOOT (Resource: %s%s#LAST#).", offweapon:getName({do_color=true, no_add_name=true}), table.get(self.resources_def[kind], "color") or "#SALMON#", table.get(self.resources_def[kind], "name") or kind:capitalize())
./mod/class/interface/Archery.lua:				game.logPlayer(self, "#ORCHID#Your %s CANNOT SHOOT (Resource: %s%s#LAST#).", pf_weapon:getName({do_color=true, no_add_name=true}), table.get(self.resources_def[kind], "color") or "#SALMON#", table.get(self.resources_def[kind], "name") or kind:capitalize())
./mod/class/interface/Archery.lua:					game.logPlayer(archery_actor, "#ORCHID#Target out of range.  Hold <ctrl> to force all weapons to fire at targets out of ranges (%d - %d).", tg.warn_range, tg.max_range)
./mod/class/interface/Archery.lua:					game.logPlayer(archery_actor, "#ORCHID#Target out of range.  Hold <ctrl> to force your weapon to fire at targets beyond its range (%d).", tg.warn_range)
./mod/class/interface/Archery.lua:					game.logPlayer(self, "#ORCHID#You COULD NOT SHOOT your %s (Resource: %s%s#LAST#).", realweapon:getName({do_color=true, no_add_name=true}), table.get(self.resources_def[kind], "color") or "#SALMON#", table.get(self.resources_def[kind], "name") or kind:capitalize())
./mod/class/interface/Archery.lua:							game.logPlayer(self, "#ORCHID#You COULD NOT SHOOT your %s (Resource: %s%s#LAST#).", realweapon:getName({do_color=true, no_add_name=true}), table.get(self.resources_def[kind], "color") or "#SALMON#", table.get(self.resources_def[kind], "name") or kind:capitalize())
./mod/class/interface/Archery.lua:		game.logPlayer(self, "You are disarmed!")
./mod/class/interface/Archery.lua:		game.logPlayer(self, "You must wield a ranged weapon (%s)!", ammo)
./mod/class/interface/ActorInscriptions.lua:		if vocal then game.logPlayer(self, "You are unable to use this kind of inscription.") end
./mod/class/interface/ActorInscriptions.lua:		if vocal then game.logPlayer(self, "You are unable to use this kind of inscription.") end
./mod/class/interface/ActorInscriptions.lua:		if vocal then game.logPlayer(self, "You already have too many of this inscription.") end
./mod/class/interface/ActorInscriptions.lua:			game.logPlayer(self, "You have no more inscription slots.")
./mod/class/interface/ActorInscriptions.lua:		game.logPlayer(self, "You are now inscribed with %s.", t.name)
./mod/class/interface/ActorInscriptions.lua:		game.logPlayer(self, "Your %s is depleted!", t.name)
./mod/class/interface/PartyLore.lua:		game.logPlayer(self, "Lore found: #0080FF#%s", l.name)
./mod/class/interface/PartyLore.lua:			game.logPlayer(self, "You can read all your collected lore in the game menu, by pressing Escape.")
./mod/class/interface/Combat.lua:		game.logPlayer(self, "#F53CBE#You revel in attacking a weakened foe! (+%d hate)", effGloomWeakness.hateBonus)
./mod/class/interface/Combat.lua:			game.logPlayer(self, "#F53CBE#Your rampage is invigorated by your fierce attack! (+1 duration)")
./mod/class/Game.lua:		self.logPlayer(self.player, "#LIGHT_RED#You may not change level so soon after a kill (%d game turns left to wait)!", left)
./mod/class/Game.lua:		self.logPlayer(self.player, "#LIGHT_RED#You may not change level without your own body!")
./mod/class/Game.lua:		self.logPlayer(self.player, "#LIGHT_RED#You may not leave the zone with this character!")
./mod/class/Game.lua:		self.logPlayer(self.player, "#LIGHT_RED#You cannot escape your fate by leaving the level!")
./mod/class/Game.lua:	local not_wild = function(f, bypass) return function(...) if self.zone and (not self.zone.wilderness or (bypass and bypass())) then f(...) else self.logPlayer(self.player, "You cannot do that on the world map.") end end end
./mod/class/GameState.lua:					game.logPlayer(who, "#ORCHID#%s does not recognize you.", self.name:capitalize())
./mod/class/GameState.lua:				game.logPlayer(who, "#LIGHT_GREEN#%s", type(unlock) == "string" and unlock or ("You have unlocked a new talent: %s!"):format(t.name))
./mod/class/Object.lua:				game.logPlayer(who, "%s is still recharging.", self:getName{no_count=true})
./mod/class/Object.lua:				game.logPlayer(who, "%s can not be used anymore.", self:getName{no_count=true})
./mod/class/Object.lua:				game.logPlayer(who, "%s is still recharging.", self:getName{no_count=true})
./mod/class/Object.lua:				game.logPlayer(who, "%s can not be used anymore.", self:getName{no_count=true})
./mod/class/Object.lua:		game.logPlayer(who, msg)
./mod/class/NPC.lua:				game.logPlayer(self.summoner, "#PINK#Your summoned %s disappears.", self.name)
./mod/class/uiset/Classic.lua:	game.logPlayer = function(e, style, ...) if e == game.player or e == game.party then game.log(style, ...) end end
./mod/class/uiset/Minimalist.lua:	game.logPlayer = function(e, style, ...) if e == game.player or e == game.party then game.log(style, ...) end end
./mod/class/Actor.lua:			game.logPlayer(self, "You are asleep and unable to move!")	
./mod/class/Actor.lua:				game.logPlayer(self, "You are unable to move!")
./mod/class/Actor.lua:			game.logPlayer(self, "#F53CBE#Your movements fuel your rampage! (+1 duration)")
./mod/class/Actor.lua:				game.logPlayer(self, "#LIGHT_RED#Your %s is immune to the teleportation and drops to the floor!", o:getName{do_color=true})
./mod/class/Actor.lua:					game.logPlayer(self, "#CADET_BLUE#You notice a trap (%s)!", trap:getName())
./mod/class/Actor.lua:			game.logPlayer(self, "Your time shield crumbles under the damage!")
./mod/class/Actor.lua:			game.logPlayer(self, "Your shield crumbles under the damage!")
./mod/class/Actor.lua:			game.logPlayer(self, "Your resonance field crumbles under the damage!")
./mod/class/Actor.lua:				game.logPlayer(self, hateMessage.." (+%d hate)", hateGain)
./mod/class/Actor.lua:				game.logPlayer(src, hateMessage.." (+%d hate)", hateGain)
./mod/class/Actor.lua:		game.logPlayer(game.player, "You feel a surge of power as a powerful creature falls nearby.")
./mod/class/Actor.lua:			game.logPlayer(src.summoner, "%s feeds you hate from its latest victim. (+%d hate)", src.name:capitalize(), src.summoner_hate_per_kill)
./mod/class/Actor.lua:				game.logPlayer(game.player, "#LIGHT_RED#The cease to exist spell fizzles and cancels, leaving the timeline intact.")
./mod/class/Actor.lua:			game.logPlayer(self, "#AQUAMARINE#You have gained one more life (%d remaining).", self.easy_mode_lifes)
./mod/class/Actor.lua:		game.logPlayer(self, "#FF0000#You carry too much--you are encumbered!")
./mod/class/Actor.lua:		game.logPlayer(self, "#FF0000#Drop some of your items.")
./mod/class/Actor.lua:		game.logPlayer(self, "#00FF00#You are no longer encumbered.")
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot switch equipment while sleeping!")
./mod/class/Actor.lua:						game.logPlayer(self, "#STEEL_BLUE#Casts %s.", anom.name)
./mod/class/Actor.lua:						game.logPlayer(self, "#STEEL_BLUE#You've moved to another time thread.")
./mod/class/Actor.lua:						game.logPlayer(self, "#LIGHT_RED#You lose control and unleash an anomaly!")
./mod/class/Actor.lua:		game.logPlayer(self, "#LIGHT_RED#You feel the edges of spacetime begin to ripple and bend!")
./mod/class/Actor.lua:		game.logPlayer(self, "#LIGHT_BLUE#Spacetime feels more stable.")
./mod/class/Actor.lua:		game.logPlayer(self, "#LIGHT_RED#Spacetime fights against your control!")
./mod/class/Actor.lua:		game.logPlayer(self, "#LIGHT_BLUE#Spacetime has calmed...  somewhat.")
./mod/class/Actor.lua:		if not silent then game.logPlayer(self, "%s is sleeping and unable to do this.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:						if not silent then game.logPlayer(self, "You %s %s to activate %s.", res_def.invert_values and "have too much committed" or "do not have enough uncommitted", res_def.name, ab.name) end
./mod/class/Actor.lua:			if not silent then game.logPlayer(self, "You do not have enough feedback to use %s.", ab.name) end
./mod/class/Actor.lua:			if not silent then game.logPlayer(self, "You do not have enough fortress energy to use %s.", ab.name) end
./mod/class/Actor.lua:							if not silent then game.logPlayer(self, "You have too much %s to use %s.", res_def.name, ab.name) end
./mod/class/Actor.lua:							if not silent then game.logPlayer(self, "You do not have enough %s to use %s.", res_def.name, ab.name) end
./mod/class/Actor.lua:				if not silent then game.logPlayer(self, "You fail to use %s due to your equilibrium!", ab.name) end
./mod/class/Actor.lua:		game.logPlayer(self, "You can not drop items while sleeping.")
./mod/class/Actor.lua:		game.logPlayer(self, "You can not drop %s (plot item).", o:getName{do_colour=true})
./mod/class/Actor.lua:		game.logPlayer(self, "You can not drop %s (tagged).", o:getName{do_colour=true})
./mod/class/Actor.lua:					game.logPlayer(self, "You destroy %s.", o:getName{do_colour=true, do_count=true})
./mod/class/Actor.lua:					game.logPlayer(self, "You can not destroy %s.", o:getName{do_colour=true})
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment while sleeping!")
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment!")
./mod/class/Actor.lua:			game.logPlayer(self, "You had to drop %s due to lack of space.", rrs:getName{do_color = true})
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment while sleeping!")
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment!")
./mod/class/Actor.lua:				game.logPlayer(self, "You extract %s from %s", gem:getName{do_color=true, do_count=true}, o:getName{do_color=true, do_count=true})
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment!")
./mod/class/Actor.lua:	game.logPlayer(self, "You detach %s from your %s.", oldo:getName{do_color=true}, base_o:getName{do_color=true})
./mod/class/Actor.lua:		game.logPlayer(self, "You cannot change your equipment!")
./mod/class/Actor.lua:		game.logPlayer(self, "You can not use a tinker without the corresponding item.")
./mod/class/Actor.lua:		game.logPlayer(self, "This item is not usable: %s.", err)
./mod/class/Actor.lua:		game.logPlayer(self, "This tinker can not be applied to this item.")
./mod/class/Actor.lua:		game.logPlayer(self, "This tinker can not be applied to this item.")
./mod/class/Actor.lua:		game.logPlayer(self, "This tinker can not be applied to this item.")
./mod/class/Actor.lua:		game.logPlayer(self, "This tinker can not be applied to this item.")
./mod/class/Actor.lua:			game.logPlayer(self, "You already have a tinker on this item.")
./mod/class/Actor.lua:		game.logPlayer(self, "You attach %s to your %s.", wear_o:getName{do_color=true}, base_o:getName{do_color=true})
./mod/class/Actor.lua:		game.logPlayer(self, "You fail to attach %s to %s.", wear_o:getName{do_color=true}, base_o:getName{do_color=true})
./mod/class/Trap.lua:					game.logPlayer(who, "#LIGHT_BLUE#%s: %s#LAST#", success and "Success" or "Failure", msg)
