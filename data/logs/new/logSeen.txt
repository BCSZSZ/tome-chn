./data/talents/cunning/called-shots.lua:			game.logSeen(target, "%s resists being knocked down.", target.name:capitalize())
./data/talents/cunning/called-shots.lua:			game.logSeen(target, "%s resists the stunning shot!", target.name:capitalize())
./data/talents/cunning/dirty.lua:				game.logSeen(target, "#CRIMSON#%s's %s was extended!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or e.desc)
./data/talents/cunning/dirty.lua:						game.logSeen(target, "#CRIMSON#%s's %s was stripped!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or eff[2].desc)
./data/talents/cunning/dirty.lua:						game.logSeen(target, "#CRIMSON#%s's %s was disrupted!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or eff[2].desc)
./data/talents/cunning/poisons.lua:			game.logSeen(target, "#GREEN#Poison bursts out of %s's corpse!", target.name:capitalize())
./data/talents/cunning/poisons.lua:				game.logSeen(target, "#GREEN#%s's %s is disrupted by crippling poison!", target.name:capitalize(), t.name)
./data/talents/cunning/scoundrel.lua:			game.logSeen(target, "#CRIMSON#%s's %s is disrupted by %s wounds!", target.name:capitalize(), t.name, target:his_her())
./data/talents/cunning/scoundrel.lua:			game.logSeen(target, "#CRIMSON#%s's %s is disrupted by %s wounds!", target.name:capitalize(), t.name, target:his_her())
./data/talents/cunning/scoundrel.lua:		game.logSeen(self, "#ORANGE#%s redirects the effect '%s'!", self.name:capitalize(), e.desc)
./data/talents/cunning/shadow-magic.lua:			game.logSeen(self, "You do not have line of sight.")
./data/talents/cunning/shadow-magic.lua:		if not self:teleportRandom(x, y, 0) then game.logSeen(self, "The spell fizzles!") return true end
./data/talents/cunning/shadow-magic.lua:				game.logSeen(target, "%s is not dazed!", target.name:capitalize())
./data/talents/cunning/tactical.lua:			game.logSeen(self, "%s counters the attack!", target.name:capitalize())
./data/talents/cunning/traps.lua:	game.logSeen(m, "#PINK#A %s materializes from the shadows!", m.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s resists!", who.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s disappears into a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:						game.logSeen(who, "%s is partially buried in a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:						game.logSeen(who, "%s avoids a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:							game.logSeen(self.target, "%s emerges from a collapsed pit.", self.target.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(self, "#LIGHT_STEEL_BLUE#%s distorts time and space!", self:getName())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s knocks %s back!", self:getName():capitalize(), who.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s fails to knock %s back!", self:getName():capitalize(), who.name:capitalize())
./data/talents/cursed/cursed-aura.lua:				game.logSeen({x=self.x, y=self.y}, "#F53CBE#%s drops to the ground.", self.name:capitalize())
./data/talents/cursed/darkness.lua:					game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:				game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:					game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:				game.logSeen(self, "The dark tendrils lash at %s.", self.target.name)
./data/talents/cursed/darkness.lua:							--game.logSeen(target, "%s stumbles in the darkness!", target.name:capitalize())
./data/talents/cursed/endless-hunt.lua:					game.logSeen(target, "#F53CBE#%s's %s is disrupted!", target.name:capitalize(), t.name)
./data/talents/cursed/fears.lua:			game.logSeen(target, "#F53CBE#%s ignores the fear!", target.name:capitalize())
./data/talents/cursed/fears.lua:			game.logSeen(target, "%s resists the fear!", target.name:capitalize())
./data/talents/cursed/fears.lua:						game.logSeen(actor, "#F53CBE#%s ignores the panic!", actor.name:capitalize())
./data/talents/cursed/fears.lua:						game.logSeen(actor, "#F53CBE#%s resists the panic!", actor.name:capitalize())
./data/talents/cursed/force-of-will.lua:						game.logSeen(target, "%s was smashed back %d spaces!", target.name:capitalize(), knockbackCount)
./data/talents/cursed/force-of-will.lua:						game.logSeen(target, "%s was smashed!", target.name:capitalize())
./data/talents/cursed/force-of-will.lua:				game.logSeen(target, "%s was blasted back %d spaces!", target.name:capitalize(), knockbackCount)
./data/talents/cursed/gestures.lua:			game.logSeen(self, "%s resists the Gesture of Pain.", target.name:capitalize())
./data/talents/cursed/primal-magic.lua:			game.logSeen(self, "Your attempt to displace fails!")
./data/talents/cursed/punishments.lua:					game.logSeen(who, "%s resists the stun!", who.name:capitalize())
./data/talents/cursed/punishments.lua:							game.logSeen(self, "%s holds on to its sanity.", self.name:capitalize())
./data/talents/cursed/rampage.lua:				game.logSeen(self, "#F53CBE#%s slams %s!", self.name:capitalize(), target.name)
./data/talents/cursed/rampage.lua:					game.logSeen(target, "#F53CBE#%s resists the stunning blow!", target.name:capitalize())
./data/talents/cursed/slaughter.lua:--					game.logSeen(self, "%s cleaves through another foe!", self.name:capitalize())
./data/talents/cursed/strife.lua:		if not self:teleportRandom(x, y, 0) then game.logSeen(self, "The blindside fizzles!") return true end
./data/talents/gifts/antimagic.lua:		game.logSeen(self, "%s is invigorated by the attack!", self.name:capitalize())
./data/talents/gifts/antimagic.lua:					game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/talents/gifts/antimagic.lua:			game.logSeen(self, "#GREEN#The antimagic shield of %s crumbles.", self.name)
./data/talents/gifts/sand-drake.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:				game.logSeen(target, "%s resists the static field!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:			game.logSeen(target, "%s is caught in the static field!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:					game.logSeen(target, "%s resists the tornado!", target.name:capitalize())
./data/talents/misc/horrors.lua:		game.logSeen(self, "The scent of blood sends the %ss into a frenzy!", self.name:capitalize())
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the cut!", target.name:capitalize())
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the void!", target.name:capitalize())
./data/talents/misc/horrors.lua:				if target.x ~= ox or target.y ~= oy then game.logSeen(target, "%s is pulled in!", target.name:capitalize()) end
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the grab!", target.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(target, "%s is immune!", target.name:capitalize())
./data/talents/misc/inscriptions.lua:		if not hit then game.logSeen(target, "%s resists!", target.name:capitalize()) return true end
./data/talents/misc/inscriptions.lua:		game.logSeen(target, "%s has moved forward in time!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the blinding!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/misc/npcs.lua:			game.logSeen(target, "%s resists the blow!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the constriction!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the grab!", target.name:capitalize())
./data/talents/misc/npcs.lua:					game.logSeen(who, "%s resists!", who.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the crushing!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "%s spawns one of its tentacles!", self.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "%s spawns a tentacle!", self.name:capitalize())
./data/talents/misc/npcs.lua:				if target.x ~= ox or target.y ~= oy then game.logSeen(target, "%s is pulled in!", target.name:capitalize()) end
./data/talents/misc/npcs.lua:			game.logSeen(self, "%s spawns a slimy crawler!", self.name:capitalize())
./data/talents/misc/npcs.lua:		game.logSeen("#VIOLET#%s is freed from the suspended state!", self.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the body shot!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "You can't move there.")
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/misc/objects.lua:					game.logSeen(self, "%s's animating magic is disrupted!", target.name:capitalize())
./data/talents/misc/objects.lua:			game.logSeen(self, "#CRIMSON#%s's shield deflects the blow!", self.name)
./data/talents/misc/races.lua:			game.logSeen(self, "#CRIMSON#%s roars with rage shaking off %d mental debuffs!", self.name:capitalize(), nb)
./data/talents/misc/races.lua:				game.logSeen(target, "%s resists the mental assault!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s resists the shove!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is knocked back by the gale!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s remains firmly planted in the face of the gale!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is knocked back by the telekinetic blow!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s holds its ground!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is teleported a short distance!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s resists the teleportation!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s retreats in terror!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s shakes off the fear!", target.name:capitalize())
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/augmented-mobility.lua:		game.logSeen(self, "%s performs a telekinetically enhanced leap!", self.name:capitalize())
./data/talents/psionic/augmented-striking.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/talents/psionic/augmented-striking.lua:						game.logSeen(lt, "%s resists the pin!", lt.name:capitalize())
./data/talents/psionic/augmented-striking.lua:						game.logSeen(rt, "%s resists the pin!", rt.name:capitalize())
./data/talents/psionic/dream-forge.lua:			game.logSeen(self, "#ORANGE#%s forges a dream shield to block the attack!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:			game.logSeen(self, "#ORANGE#%s's dream shield has been strengthened by the attack!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:				game.logSeen(self, "#GOLD#%s strikes the dreamforge!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:				game.logSeen(self, "#GOLD#%s begins breaking dreams!", self.name:capitalize())
./data/talents/psionic/dream-smith.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/psionic/dreaming.lua:					game.logSeen(self, "%s resists the sleep!", target.name:capitalize())
./data/talents/psionic/dreaming.lua:			game.logSeen(self, "The dream walk fizzles!")
./data/talents/psionic/finer-energy-manipulations.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/psionic/focus.lua:			game.logSeen(self, "#ORCHID#%s has recovered!", self.name:capitalize())
./data/talents/psionic/kinetic-mastery.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/psionic/mentalism.lua:		game.logSeen(self, "%s's mind is clear!", self.name:capitalize())
./data/talents/psionic/nightmare.lua:					game.logSeen(self, "%s resists the nightmare!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:		game.logSeen(target, "#F53CBE#%s's Inner Demon manifests!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:			game.logSeen(target, "%s resists the demons!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:			game.logSeen(target, "%s resists the nightmare!", target.name:capitalize())
./data/talents/psionic/other.lua:			game.logSeen(self, "%s telekinetically seizes: %s.", self.name:capitalize(), o:getName{do_color=true})
./data/talents/psionic/other.lua:			game.logSeen(a, "%s telekinetically grabs %s!", self.name:capitalize(), a.name)
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/psi-fighting.lua:					game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/psionic/psychic-assault.lua:			game.logSeen(target, "%s resists the lobotomy!", target.name:capitalize())
./data/talents/psionic/slumber.lua:			game.logSeen(self, "%s resists the sleep!", target.name:capitalize())
./data/talents/psionic/voracity.lua:						game.logSeen(self, "%s resists the sleep!", act.name:capitalize())
./data/talents/spells/air.lua:		game.logSeen(self, "#0080FF#A furious lightning storm forms around %s!", self.name)
./data/talents/spells/air.lua:		game.logSeen(self, "#0080FF#The furious lightning storm around %s calms down and disappears.", self.name)
./data/talents/spells/arcane.lua:		game.logSeen(self, "#VIOLET#%s's disruption shield collapses and then explodes in a powerful manastorm!", self.name:capitalize())
./data/talents/spells/conveyance.lua:				game.logSeen(target, "The spell fizzles!")
./data/talents/spells/conveyance.lua:				game.logSeen(target, "The spell fizzles!")
./data/talents/spells/eldritch-shield.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/spells/eldritch-shield.lua:				game.logSeen(target, "%s resists the dazing blows!", target.name:capitalize())
./data/talents/spells/energy-alchemy.lua:			game.logSeen(golem, "%s is energized by the attack, reducing some talent cooldowns!", golem.name:capitalize())
./data/talents/spells/energy-alchemy.lua:			game.logSeen(self, "#LIGHT_STEEL_BLUE#%s is energized by all the damage taken!", self.name:capitalize())
./data/talents/spells/fire-alchemy.lua:		game.logSeen(self, "#FF8000#%s turns into pure flame!", self.name:capitalize())
./data/talents/spells/fire-alchemy.lua:		game.logSeen(self, "#FF8000#The raging fire around %s calms down and disappears.", self.name)
./data/talents/spells/golem.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/spells/golem.lua:				game.logSeen(target, "%s resists the crushing!", target.name:capitalize())
./data/talents/spells/golem.lua:					game.logSeen(target, "%s resists the dazing blow!", target.name:capitalize())
./data/talents/spells/ice.lua:							game.logSeen(act, "%s shatters!", act.name:capitalize())
./data/talents/spells/spells.lua:				game.logSeen(self, "#{bold}#%s decays into a pile of ash!#{normal}#", self.name:capitalize())
./data/talents/spells/staff-combat.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/spells/water.lua:		game.logSeen(self, "A #LIGHT_BLUE#wave of icy water#LAST# erupts from the ground!")
./data/talents/techniques/2h-assault.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s feels the pain of the death blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s resists the death blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:						game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/techniques/agility.lua:				game.logSeen(target, "%s resists the daze!", target.name:capitalize())
./data/talents/techniques/archery.lua:			game.logSeen(target, "%s resists the scattershot!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the disarm!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the slow!", target.name:capitalize())
./data/talents/techniques/archery.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/techniques/assassination.lua:				game.logSeen(target, "%s resists the Coup de Grace!", target.name:capitalize())
./data/talents/techniques/assassination.lua:					game.logSeen(self, "#GREY#%s slips into shadow.", self.name:capitalize())
./data/talents/techniques/bloodthirst.lua:			game.logSeen(target, "%s resists the terror!", target.name:capitalize())
./data/talents/techniques/buckler-training.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/techniques/buckler-training.lua:			--game.logSeen(self, "%s follows up with a shot from %s!", self.name:capitalize(), sling:getName())
./data/talents/techniques/conditioning.lua:				game.logSeen(self, "#ORCHID#%s has recovered!#LAST#", self.name:capitalize())
./data/talents/techniques/conditioning.lua:					game.logSeen(target, "%s is not intimidated!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:				game.logSeen(target, "%s resists the surprise strike!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:				game.logSeen(target, "%s resists the stunning strike!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:		game.logSeen(self, "%s becomes a whirlwind of weapons!", self.name:capitalize())
./data/talents/techniques/excellence.lua:		game.logSeen(self, "%s %s the attack!", self.name:capitalize(), ret and "intercepts" or "fails to intercept")
./data/talents/techniques/excellence.lua:			game.logSeen(target, "%s resists the strangling shot!", target.name:capitalize())
./data/talents/techniques/field-control.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s feels the pain of the death blow!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s resists the death blow!", target.name:capitalize())
./data/talents/techniques/reflexes.lua:			game.logSeen(target, "%s's %s is disrupted by the shot!", target.name:capitalize(), t.name)
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s stands firm!", target.name:capitalize())
./data/talents/techniques/strength-of-the-berserker.lua:						game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/techniques/superiority.lua:				game.logSeen(target, "%s is called to battle!", target.name:capitalize())
./data/talents/techniques/thuggery.lua:				game.logSeen(target, "%s resists the headblow!", target.name:capitalize())
./data/talents/techniques/weaponshield.lua:				game.logSeen(target, "%s resists the shield bash!", target.name:capitalize())
./data/talents/techniques/weaponshield.lua:					game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/uber/const.lua:			game.logSeen(self,"%s's draconic body hardens and heals!",self.name)
./data/talents/uber/cun.lua:			game.logSeen(self, "#LIGHT_BLUE#%s slows from critical velocity!", self.name:capitalize())
./data/talents/uber/cun.lua:			game.logSeen(self, "#LIGHT_BLUE#%s reaches critical velocity!", self.name:capitalize())
./data/talents/uber/cun.lua:			game.logSeen(self, "#VIOLET#%s assembles %s!", self.name:capitalize(), o:getName{do_colour=true, no_count=true})
./data/talents/uber/cun.lua:		elseif damtype == DamageType.FIRE and rng.percent(30) then ok=true self:removeEffectsFilter{type="magical", status="detrimental"} self:removeEffectsFilter{type="physical", status="detrimental"} game.logSeen(self, "#CRIMSON#%s fiery attack invokes a cleansing flame!", self.name:capitalize())
./data/talents/uber/wil.lua:							game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/uber/wil.lua:		game.logSeen(self, "#LIGHT_BLUE#%s's unbreakable will shrugs off the effect!", self.name:capitalize())
./data/talents/undeads/ghoul.lua:		game.logSeen(self, "%s #YELLOW_GREEN#VOMITS#LAST# on the ground!", self.name:capitalize())
./data/talents/undeads/ghoul.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/timed_effects/magical.lua:			game.logSeen(self, "#LIGHT_RED#A carrion worm mass bursts out of %s!", self.name:capitalize())
./data/timed_effects/magical.lua:						game.logSeen(target, "%s is pulled in!", target.name:capitalize()) 
./data/timed_effects/magical.lua:			game.logSeen(self, "%s has unraveled!", self.name:capitalize())
./data/timed_effects/magical.lua:			game.logSeen(self, "%s has been removed from the timeline!", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s's mind recovers from the domination.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s collapses.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the beckoning.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s is jolted to attention by the damage and is no longer being beckoned.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the paranoia.", self.name:capitalize())
./data/timed_effects/mental.lua:								game.logSeen(target, "#F53CBE#%s ignores the fear!", target.name:capitalize())
./data/timed_effects/mental.lua:								game.logSeen(target, "%s resists the fear!", target.name:capitalize())
./data/timed_effects/mental.lua:					game.logSeen(self, "#F53CBE#%s is struck by fear of the %s effect.", self.name:capitalize(), def.desc)
./data/timed_effects/mental.lua:		game.logSeen(self, "#F53CBE#%s is struck by fear of the %s effect.", self.name:capitalize(), util.getval(e.desc, self, e))
./data/timed_effects/mental.lua:				game.logSeen(self, "%s is tormented by a vision!", target.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the panic.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s succumbs to the nightmare!", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s dies when its frenzy ends!", self.name:capitalize())
./data/timed_effects/mental.lua:		if old_eff.cur_regen + new_eff.regen < new_eff.max then	game.logSeen(self, "%s's blood frenzy intensifies!", self.name:capitalize()) end
./data/timed_effects/mental.lua:		game.logSeen(self, "%s revels in the spilt blood and grows stronger!",self.name:capitalize())
./data/timed_effects/mental.lua:		game.logSeen(self, "%s no longer revels in blood quite so much.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s's increased life fades, leaving it stunned by the loss.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s has shrugged off %d damage and is ready for more.", self.name:capitalize(), eff.damageShieldMax - eff.damageShield)
./data/timed_effects/mental.lua:		--game.logSeen(self, "%s shrugs off %d damage.", self.name:capitalize(), absorb)
./data/timed_effects/mental.lua:		game.logSeen(self, ("%s has lost %d %s."):format(self.name:capitalize(), eff.statReduction, Stats.stats_def[maxId].name:capitalize()))
./data/timed_effects/mental.lua:		game.logSeen(self, "An unseen force begins to swirl around %s!", self.name)
./data/timed_effects/mental.lua:		game.logSeen(self, "The unseen force around %s subsides.", self.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#The see the threads spell fizzles and cancels, leaving you in this timeline.")
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#You've altered your destiny and will not be pulled into the past.")
./data/timed_effects/other.lua:			game.logSeen(target, "#F53CBE#%s's remains glow with a strange light.", target.name:capitalize())
./data/timed_effects/other.lua:				game.logSeen(m, "#F53CBE#The corpse of the %s pulls itself up to fight for you.", target.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#%s's mania hastens %s.", self.name:capitalize(), t.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#%s begins to choke from a suffocating curse. (-%d air)", target.name, airLoss)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#The air around %s grows cold and terrifying shapes begin to coalesce. A nightmare has begun.", self.name:capitalize())
./data/timed_effects/other.lua:						game.logSeen(target, "#F53CBE#%s suffers an unfortunate end.", target.name:capitalize())
./data/timed_effects/other.lua:						game.logSeen(target, "#F53CBE#%s suffers an unfortunate blow.", target.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(self, "%s succumbs to heightening fears!", self.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(self, "%s feels a little less afraid!", self.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(p.target, "#LIGHT_RED#%s writhes in agony as a fragment of its mind is destroyed!", p.target.name:capitalize())
./data/timed_effects/other.lua:			game.logSeen(eff.target, "#LIGHT_BLUE#%s has spawned a dream projection to protect its mind!", eff.target.name:capitalize())
./data/timed_effects/other.lua:				game.logSeen(eff.target, "#LIGHT_RED#%s's mind shatters into %d tiny fragments!", eff.target.name:capitalize(), eff.target.max_life)
./data/timed_effects/other.lua:				game.logSeen(eff.target, "#LIGHT_RED#%s suffered a %s of self in the Dreamscape!", eff.target.name:capitalize(), loss)
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#The spell fizzles.")
./data/timed_effects/other.lua:		game.logSeen(eff.src, "#LIGHT_RED#%s explodes into a shower of gore!", self.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "#GREY#%s looks stony for a moment, but resists the transformation.", self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s has re-opened a cursed wound!", self.name:capitalize())
./data/timed_effects/physical.lua:					game.logSeen(src, "%s resists the disarming attempt!", src.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "#LIGHT_RED#%s is being ravaged by distortion!", self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s's corrosive nature intensifies!",self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s's natural acid becomes more concentrated!",self.name:capitalize())
./data/timed_effects/physical.lua:				game.logSeen(self, "Some leeches drop off %s!", self.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "Some leeches drop off %s!", self.name:capitalize())
./data/zones/abashed-expanse/grids.lua:			game.logSeen(src, "#VIOLET#The wormhole absorbs energies and stabilizes. You can now use it to travel.")
./data/zones/ancient-elven-ruins/objects.lua:		game.logSeen(who, "#ANTIQUE_WHITE#The Crown of Eternal Night seems to react with the Bindings, you feel tremendous dark power.")
./data/zones/ardhungol/grids.lua:				game.logSeen(src, "#VIOLET#The wormhole absorbs the energy of the spell and teleports %s away!", a.name)
./data/zones/ardhungol/grids.lua:				game.logSeen({x=x,y=y}, "#VIOLET#The wormhole absorbs the energy of the spell and explodes in a burst of nullmagic!")
./data/zones/ardhungol/objects.lua:			game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/zones/arena/npcs.lua:			game.logSeen(self, "#AQUAMARINE#As %s falls all its eyes fall to the ground!", self.name)
./data/zones/arena/objects.lua:			game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_count=true, no_add_name=true})
./data/zones/deep-bellow/npcs.lua:			game.logSeen(self, "#CRIMSON#%s seems invulnerable, there must be an other way to kill it!", self.name:capitalize())
./data/zones/deep-bellow/npcs.lua:			game.logSeen(self, "#AQUAMARINE#With the Mouth's death its crawler also falls lifeless on the ground!")
./data/zones/deep-bellow/npcs.lua:				game.logSeen(self, "A parchment falls to the floor near The Abomination.")
./data/zones/deep-bellow/npcs.lua:				game.logSeen(self, "A parchment falls to the floor near The Abomination.")
./data/zones/demon-plane/objects.lua:			game.logSeen(who, "%s taps %s %s together!", who.name:capitalize(), who:his_her(), self:getName{no_count=true, do_color = true, no_add_name = true})
./data/zones/infinite-dungeon/objects.lua:		game.logSeen(who, "%s quaffs the %s!", who.name:capitalize(), self:getName())
./data/zones/infinite-dungeon/objects.lua:				game.logSeen(who, "%s quaffs the %s!", who.name:capitalize(), self:getName())
./data/zones/rak-shor-pride/npcs.lua:			game.logSeen(self, "The ground shakes as %s steps!", self.name:capitalize())
./data/zones/ruined-dungeon/zone.lua:						game.logSeen(m, "%s appears out of the thin air!", m.name:capitalize())
./data/zones/shadow-crypt/npcs.lua:				game.logSeen(self, "As your shade dies, the magical veil protecting the stairs out vanishes.")
./data/zones/shertul-fortress/grids.lua:				if self then game.logSeen(self, "#VIOLET#As %s falls you notice a portal appearing.", self.name)
./data/zones/shertul-fortress/grids.lua:				else game.logSeen(p, "#VIOLET#Your rod of recall shakes, a portal appears beneath you.") end
./data/zones/sludgenest/zone.lua:			game.logSeen(m, "#YELLOW_GREEN#One of the wall shakes for a moment and then turns into %s!", m.name:capitalize())
./data/zones/thieves-tunnels/npcs.lua:		game.logSeen(who, "As the assassin dies the magical veil protecting the stairs out vanishes.")
./data/zones/trollmire/npcs.lua:				game.logSeen(self, "Prox staggers for a moment. A note seems to drop at his feet.")
./data/zones/trollmire/npcs.lua:				game.logSeen(self, "Shax staggers for a moment. A note seems to drop at his feet.")
./mod/ai/sandworm_tunneler.lua:				game.logSeen(self, "#OLIVE_DRAB#The %s burrows into the ground and disappears.", self.name)
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s has been disrupted by #ORCHID#anti-magic forces#LAST#!", t.name) end
./mod/class/Actor.lua:			game.logSeen(self, "%s temporarily fights the paralyzation.", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s unleashes the stored damage in retribution!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s shatters into pieces!", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s splits in two!", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "#YELLOW#%s has been healed by a blast of positive energy!#LAST#", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s fades for a moment and then reforms whole again!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, self.self_resurrect_msg or "#LIGHT_RED#%s rises from the dead!", self.name:capitalize()) -- src, not self as the source, to make sure the player knows his doom ;>
./mod/class/Actor.lua:			game.logSeen(self, "%s warps space-time to equip: %s.", self.name:capitalize(), names)
./mod/class/Actor.lua:			game.logSeen(self, "%s switches %s weapons to: %s.", self.name:capitalize(), self:his_her(), names)
./mod/class/Actor.lua:		if not silent then game.logSeen(self, self.forbid_talents[ab.id] or "%s can not use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is too afraid to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is silenced and cannot use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "The spell fizzles.") end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is too disconnected from Nature to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is unable to use this kind of inscription.", self.name:capitalize()) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is unable to use this kind of inscription.", self.name:capitalize()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s is too heavily armoured to use this talent.", self.name:capitalize()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s can't use this talent while holding a weapon or shield.", self.name:capitalize()) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s's %s has been disrupted by #ORCHID#anti-magic forces#LAST#!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s's %s has been disrupted by #ORCHID#anti-nature forces#LAST#!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s is confused and fails to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s fails to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s is too terrified to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s fumbles and fails to use %s, injuring %s!", self.name:capitalize(), ab.name, self:his_her_self()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s's %s is interrupted by the shot!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:			game.logSeen(self, "%s", self:useTalentMessage(ab))
./mod/class/Actor.lua:			game.logSeen(self, "%s %s %s.", self.name:capitalize(), self:isTalentActive(ab.id) and "deactivates" or "activates", ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s casts %s.", self.name:capitalize(), ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s uses %s.", self.name:capitalize(), ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s talent '%s%s' is disrupted by the mind parasite.", self.name:capitalize(), (t.display_entity and t.display_entity:getDisplayString() or ""), t.name)
./mod/class/Actor.lua:			game.logSeen(self, "#LIGHT_RED#%s starts suffocating to death!", self.name:capitalize())
./mod/class/Actor.lua:				game.logSeen(self, "#ORANGE#%s shrugs off the effect '%s'!", self.name:capitalize(), e.desc)
./mod/class/Actor.lua:		game.logSeen(self, "%s reflects the spell!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s ignores the spell!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s drops on the floor: %s.", self.name:capitalize(), stack:getName{do_color=true, do_count=true})
./mod/class/generator/actor/HighPeakFinal.lua:			game.logSeen(m, "An entity appears through the portal!")
./mod/class/generator/actor/ValleyMoon.lua:		game.logSeen(_M.limmir, "Limmir summons a blast of holy light!")
./mod/class/Grid.lua:			if game.level.map.attrs(x, y, "on_block_change_msg") then game.logSeen({x=x, y=y}, "%s", game.level.map.attrs(x, y, "on_block_change_msg")) end
./mod/class/interface/ActorObjectUse.lua:				game.logSeen(self, "%s activates %s %s!", self.name:capitalize(), self:his_her(), data.obj:getName({no_add_name=true, do_color = true}))
./mod/class/interface/ActorObjectUse.lua:				if msg then game.logSeen(self, "%s", msg) end
./mod/class/interface/Archery.lua:		game.logSeen(target, "The shattering blow creates a shockwave!")
./mod/class/interface/Combat.lua:		game.logSeen(self, "%s is too afraid to attack.", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "%s is too terrified to attack.", self.name:capitalize())
./mod/class/interface/Combat.lua:			game.logSeen(target, "#ORCHID#%s cleverly deflects the attack with %s shield!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:			game.logSeen(target, "#ORCHID#%s parries the attack with %s dual weapons!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:		game.logSeen(target, "#ORCHID#%s instinctively hardens %s skin and ignores the attack!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:		game.logSeen(target, "The shattering blow creates a shockwave!")
./mod/class/interface/Combat.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "#{bold}#%s's spell attains critical power!#{normal}#", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "#{bold}#%s's mind surges with critical power!#{normal}#", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(target, "%s resists the grapple!", target.name:capitalize())
./mod/class/NPC.lua:	game.logSeen(self, "%s says: '%s'", self.name:capitalize(), e.text)
./mod/class/Player.lua:				game.logSeen(self, "There is an item here: %s", obj:getName{do_color=true})
./mod/class/Trap.lua:				game.logSeen(who, "#CADET_BLUE#%s %ss %s.", who.name:capitalize(), avoid, known_player and ("a trap (%s)"):format(self:getName()) or "something on the floor")
