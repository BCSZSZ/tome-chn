./data/damage_types.lua:			game.logSeen(target, "%s shrugs off the critical damage!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(src, "%s forces the iceblock to shatter.", src.name:capitalize())
./data/damage_types.lua:					game.logSeen(src, "%s forces the iceblock to shatter.", src.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the mind attack!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blinding light!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blinding light!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s avoids the blinding ink!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blinding light!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the darkness!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the searing flame!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the wave!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the bloody wave!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the punch!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the punch!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the darkness!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the punch!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the punch!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the frightening sight!", target.name:capitalize())
./data/damage_types.lua:						game.logSeen({x=x,y=y}, "%s turns into %s.", feat.name:capitalize(), newfeat.name)
./data/damage_types.lua:				game.logSeen(target, "%s resists the time prison.", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(src, "#LIGHT_STEEL_BLUE#%s can't gain any more energy this turn! ", src.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the blinding light!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blind!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the sandstorm!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/damage_types.lua:						game.logSeen({x=x,y=y}, "%s turns into %s.", feat.name:capitalize(), (newfeat or game.zone.grid_list[newfeat_name]).name)
./data/damage_types.lua:				game.logSeen(target, "%s resists the pinning!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the confusion!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the freezing!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s has not been stopped!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the blindness!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the confusion!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists entanglement!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s has no mana to burn.", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the baneful energy!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/damage_types.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:						game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/damage_types.lua:						game.logSeen(target, "%s resists the forge bellow!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the dream forge!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists disarming!", target.name:capitalize())
./data/damage_types.lua:							game.logSeen(src, "%s resists pinning!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(src, "%s resists the shove!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blindness!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the confusion!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the mind attack!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists the blinding flare!", target.name:capitalize())
./data/damage_types.lua:				game.logSeen(target, "%s resists!", target.name:capitalize())
./data/general/events/cultists.lua:					game.logSeen(c, "%s pulls a dagger and opens his own chest, piercing his beating heart. The stone glows with malevolent colors.", c.name:capitalize())
./data/general/events/fearscape-portal.lua:	game.logSeen(m, "#VIOLET#A demon steps out of the portal!")
./data/general/events/glimmerstone.lua:				game.logSeen(target, "%s is affected by the glimmerstone!", target.name:capitalize())
./data/general/events/glowing-chest.lua:			game.logSeen(who, "#GOLD#An object rolls from the chest!")
./data/general/events/glowing-chest.lua:				game.logSeen(who, "#GOLD#But the chest was guarded!")
./data/general/events/naga-portal.lua:	game.logSeen(m, "#VIOLET#A naga steps out of the coral portal!")
./data/general/events/rat-lich.lua:			game.logSeen(who, "%s raises %s %s, and a red light flashes from it's eye sockets!", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name=true}))
./data/general/events/rat-lich.lua:				game.logSeen(rat, "From the dust of decay a %s forms!", rat.name:capitalize())
./data/general/events/weird-pedestals.lua:							game.logSeen(self, "%s's soul is absorbed by the pedestal. A glowing orb appears.", self.name:capitalize())
./data/general/grids/sand.lua:					game.logSeen(self, "The unstable sand tunnel collapses!")
./data/general/grids/water.lua:				game.logSeen(who, "#AQUAMARINE#The air bubbles are depleted!")
./data/general/npcs/bird.lua:			game.logSeen(src, "#LIGHT_RED#%s raises from the dead!", self.name:capitalize())
./data/general/npcs/horror-undead.lua:		game.logSeen(self, "#VIOLET#As the necrotic abomination is destroyed you see the remaining bones and flesh reassembling in the form of new foes!")
./data/general/npcs/horror-undead.lua:		game.logSeen(self, "#VIOLET#As the bone horror is destroyed you see the remaining bones reassembling in the form of new foes!")
./data/general/npcs/horror.lua:			game.logSeen(self, "#LIGHT_RED#A carrion worm mass has spawned from %s' wounds!", self.name)
./data/general/npcs/horror.lua:			game.logSeen(self, "#AQUAMARINE#As %s falls all its eyes fall to the ground!", self.name)
./data/general/npcs/horror.lua:			game.logSeen(self.summoner, "%s is blinded by the loss of all its eyes.", self.summoner.name:capitalize())
./data/general/npcs/horror.lua:				game.logSeen(self, "#LIGHT_BLUE#A dream seed escapes %s's sleeping mind.", self.name:capitalize())
./data/general/npcs/horror.lua:			game.logSeen(self, "#LIGHT_BLUE#The sleeper stirs...")
./data/general/npcs/horror.lua:			game.logSeen(self, "%s's severed flesh starts crawling!", self.name:capitalize())
./data/general/npcs/horror.lua:			game.logSeen(self, "#AQUAMARINE#With Grgglck's death its tentacle also falls lifeless on the ground!")
./data/general/npcs/horror.lua:		game.logSeen(self, "#AQUAMARINE#A rift opens and a free floating blade emerges!")
./data/general/npcs/horror.lua:			game.logSeen(self, "#AQUAMARINE#The %s no longer seems to be controlled and clatters to the ground before vanishing into a rift.", self.name:capitalize())
./data/general/npcs/horror.lua:		game.logSeen(self, "#AQUAMARINE#A rift opens and a free floating blade emerges! It looks unstable...")
./data/general/npcs/horror.lua:			game.logSeen(self, "#AQUAMARINE#The %s no longer seems to be controlled and clatters to the ground before vanishing into a rift.", self.name:capitalize())
./data/general/npcs/horror_aquatic.lua:		game.logSeen(self, "#LIGHT_BLUE#%s explodes into a huge bubble of air!", self.name:capitalize())
./data/general/npcs/horror_temporal.lua:		game.logSeen(self, "%s has collapsed in upon itself.", self.name:capitalize())
./data/general/npcs/multihued-drake.lua:			game.logSeen(self, "#YELLOW#%s's skin turns %s!", self.name:capitalize(), t[1])
./data/general/npcs/sandworm.lua:		game.logSeen(self, "%s explodes in an acidic cloud.", self.name:capitalize())
./data/general/npcs/telugoroth.lua:				game.logSeen(self, "Reality has shifted.")
./data/general/npcs/telugoroth.lua:				game.logSeen(self, "The spell fizzles!")
./data/general/npcs/telugoroth.lua:			game.logSeen(target, "%s resists the swap!", target.name:capitalize())
./data/general/npcs/undead-rat.lua:			game.logSeen(self, "#RED#Rising again, the Rat Lich's eyes glow with renewed energy!")
./data/general/npcs/vermin.lua:		game.logSeen(self, "%s exudes a corrupted gas as it dies.", self.name:capitalize())
./data/general/npcs/xorn.lua:				game.logSeen(self, "#AQUAMARINE#%s absorbs the energy of the destroyed fragment!", self.name)
./data/general/npcs/xorn.lua:				game.logSeen(self, "#AQUAMARINE#%s is infused with all the energies of the fragments. The real Harkor'Zun is reconstituted!", m.name)
./data/general/objects/boss-artifacts-far-east.lua:			game.logSeen(who, "%s releases an icy blast from %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/boss-artifacts-far-east.lua:				game.logSeen(who, "%s's %s shakes the ground with its impact!", who.name:capitalize(), o:getName({no_add_name = true}))
./data/general/objects/boss-artifacts-far-east.lua:			game.logSeen(who, "%s slams %s %s into the ground, sending out a shockwave!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/boss-artifacts-maj-eyal.lua:					game.logSeen(target, "#LIGHT_BLUE#A Winter Storm forms around %s.", target.name:capitalize())
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logSeen(who, "#LIGHT_BLUE#%s brandishes %s %s, releasing a wave of Winter cold!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logSeen(who, "%s uses %s %s to cleanse %s mind!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color=true}), who:his_her())
./data/general/objects/boss-artifacts-maj-eyal.lua:		game.logSeen(who, "Crystals splinter off of %s's %s and animate!", who.name:capitalize(), self:getName({no_add_name = true, do_color=true}))
./data/general/objects/boss-artifacts-maj-eyal.lua:		game.logSeen(who, "%s taps %s %s, summoning a vampire thrall!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color=true}))
./data/general/objects/boss-artifacts-maj-eyal.lua:					game.logSeen(target, "%s's %s is disrupted!", target.name:capitalize(), t.name)
./data/general/objects/boss-artifacts-maj-eyal.lua:				game.logSeen(actor, "#CRIMSON#%s twitches, alerting %s that a hidden trap is nearby.", self:getName(), actor.name:capitalize())
./data/general/objects/boss-artifacts-maj-eyal.lua:				game.logSeen(who, "%s shrugs off some effects!", who.name:capitalize())
./data/general/objects/boss-artifacts-maj-eyal.lua:			game.logSeen(who, "%s's %s sends out a blast of psionic energy!", who.name:capitalize(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/ammo.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/general/objects/egos/ammo.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/ammo.lua:				game.logSeen(target, "%s's magic has been #ORCHID#purged#LAST#!", target.name:capitalize())
./data/general/objects/egos/ammo.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/ammo.lua:			game.logSeen(target, "%s's %s has been #ORCHID#burned#LAST#!", target.name:capitalize(), t.name)
./data/general/objects/egos/ammo.lua:			if not who:checkHit(check, target:combatPhysicalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/ammo.lua:				game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/general/objects/egos/ammo.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/ammo.lua:				game.logSeen(target, "%s has temporarily forgotten %s!", target.name:capitalize(), t.name)
./data/general/objects/egos/amulets.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name = true, do_color = true, no_count=true})
./data/general/objects/egos/amulets.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_count=true})
./data/general/objects/egos/belt.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/boots.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/cloak.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/light-armor.lua:		game.logSeen(who, "%s uses %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/mindstars.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/mindstars.lua:			game.logSeen(target, "%s's %s has been #ORCHID#burned#LAST#!", target.name:capitalize(), t.name)
./data/general/objects/egos/mindstars.lua:				game.logSeen(who, "%s feeds %s %s with psychic energy from %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}), target.name:capitalize())
./data/general/objects/egos/mindstars.lua:					game.logSeen(target, "%s resists the mind attack!", target.name:capitalize())
./data/general/objects/egos/ranged.lua:			game.logSeen(who, "%s uses %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/staves.lua:			game.logSeen(who, "%s fires a bolt of %s%s#LAST# energy from %s %s!", who.name:capitalize(), damTyp.text_color, damTyp.name, who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/staves.lua:			game.logSeen(who, "%s unleashes a blastwave of %s%s#LAST# energy from %s %s!", who.name:capitalize(), damTyp.text_color, damTyp.name, who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/staves.lua:				game.logSeen(who, "%s channels mana through %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/staves.lua:			game.logSeen(who, "%s channels a cone of %s%s#LAST# energy through %s %s!", who.name:capitalize(), damTyp.text_color, damTyp.name, who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/staves.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_count=true})
./data/general/objects/egos/torques-powers.lua:			game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/torques-powers.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/torques-powers.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/torques-powers.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/torques-powers.lua:		game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/torques-powers.lua:			game.logSeen(who, "%s uses %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name=true, do_color=true})
./data/general/objects/egos/totems-powers.lua:		game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name = true, do_color = true})
./data/general/objects/egos/totems-powers.lua:		game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name = true, do_color = true})
./data/general/objects/egos/totems-powers.lua:			game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName{no_add_name = true, do_color = true})
./data/general/objects/egos/wands-powers.lua:		game.logSeen(who, "%s uses %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/wands-powers.lua:		game.logSeen(who, "%s uses %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/wands-powers.lua:		game.logSeen(who, "%s conjures a wall of fire from %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/wands-powers.lua:			game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/egos/weapon.lua:				game.logSeen(target, "%s's magic has been #ORCHID#purged#LAST#!", target.name:capitalize())
./data/general/objects/egos/weapon.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/weapon.lua:			game.logSeen(target, "%s's %s has been #ORCHID#burned#LAST#!", target.name:capitalize(), t.name)
./data/general/objects/egos/weapon.lua:			if not who:checkHit(check, target:combatMentalResist()) then game.logSeen(target, "%s resists!", target.name:capitalize()) return nil end
./data/general/objects/egos/weapon.lua:				game.logSeen(target, "#YELLOW#%s has temporarily forgotten %s!", target.name:capitalize(), t.name)
./data/general/objects/egos/weapon.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/general/objects/special-artifacts.lua:			game.logSeen(who, "%s brandishes %s %s, turning into a corrupted losgoroth!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name =true}))
./data/general/objects/world-artifacts-far-east.lua:			game.logSeen(who, "#GOLD#As the blade touches %s's spilt blood, the blood rises, animated!", target.name:capitalize())
./data/general/objects/world-artifacts-far-east.lua:				game.logSeen(who, "#GOLD#%s draws power from the spilt blood!", who.name:capitalize())
./data/general/objects/world-artifacts-far-east.lua:			game.logSeen(who, "%s raises %s and sends out a burst of light!", who.name:capitalize(), self:getName())
./data/general/objects/world-artifacts-far-east.lua:			game.logSeen(who, "The %s fires a bolt of kinetic force!", self:getName())
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logSeen(who, "%s uses %s %s, curing %s afflictions!", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name = true}), who:his_her())
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logSeen(who, "%s uses the %s!", who.name:capitalize(), self:getName())
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts-maj-eyal.lua:		game.logSeen(game.player, "#CRIMSON#Telos's gem seems to flare and glows an unearthly colour.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logSeen(who, "%s invokes the memory of Neira!", who.name:capitalize())
./data/general/objects/world-artifacts-maj-eyal.lua:		game.logSeen(who, "#STEEL_BLUE#You feel a swell of arcane energy.")
./data/general/objects/world-artifacts-maj-eyal.lua:			game.logSeen(who, "%s activates %s, forging a reflective barrier!", who.name:capitalize(), self:getName({no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s brandishes %s, calling forth the might of the oceans!", who.name:capitalize(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "#CRIMSON#As you wear both Garkul's heirlooms you can feel the mighty warrior's spirit flowing through you.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s brandishes %s %s and banishes all shadows!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s brandishes the %s which radiates in all directions!", who.name:capitalize(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "%s quaffs the %s!", who.name:capitalize(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(src, "#ORCHID#%s resists the tendrils' pull!", src.name:capitalize())
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "#ANTIQUE_WHITE#The two blades glow brightly as they are brought close together.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#GOLD#Ureslak's Femur glows and shimmers!")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s empowers %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "#YELLOW_GREEN#An ironic harmony surrounds Ureslak's remains as they reunite.")
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "#YELLOW_GREEN#Ureslak's remains seem more unsettled.")
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "#CRIMSON#The echoes of time resound as the blades are reunited once more.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s holds %s %s close, cleansing %s of corruption!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}), who:his_her_self())
./data/general/objects/world-artifacts.lua:			if known then game.logSeen(who, "%s is purged of diseases!", who.name:capitalize()) end
./data/general/objects/world-artifacts.lua:				game.logSeen(who, "%s rejects the inferior psionic blade!", self.name:capitalize())
./data/general/objects/world-artifacts.lua:--		game.logSeen(self.worn_by, "#GOLD#The %s shifts colour!", self.name:capitalize())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s's %s lashes out in a flaming arc, intensifying the burning of %s enemies!", who.name:capitalize(), self:getName({do_color = true, no_add_name = true}), who:his_her())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s focuses a beam of force from %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:		game.logSeen(who, "Corpathus bursts open, unleashing a horrific mass!")
./data/general/objects/world-artifacts.lua:				game.logSeen(who, "%s's %s #SALMON#CONSUMES THE SOUL#LAST# of %s, gaining the power of %s!", who.name:capitalize(), o:getName({no_add_name = true, do_color = true}), target.name, o.use_talent.name)
./data/general/objects/world-artifacts.lua:				game.logSeen(who, "%s unleashes antimagic forces from %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:						game.logSeen(target, "%s's animating magic is disrupted by the burst of power!", target.name:capitalize())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s's %s flashes!", who.name:capitalize(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s is #PURPLE#ENVELOPED#LAST# in a deep purple aura from %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s unshutters %s %s, unleashing a torrent of shadows!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s siphons space and time into %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:				game.logSeen(target, "%s's magical shields are shattered!", target.name:capitalize())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s merges with %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s pulls %s %s around %s like a dark shroud!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}), who:his_her_self())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s flips %s %s over...", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:				game.logSeen(target, "%s is knocked back and pinned!", target.name:capitalize())
./data/general/objects/world-artifacts.lua:				game.logSeen(target, "#RED#%s#GOLD# has been decapitated!#LAST#", target.name:capitalize())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s grasps %s %s and has a sudden vision!", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name=true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s digs in %s %s.", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s focuses time flows through %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color=true, no_add_name=true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(src, "The eye locks onto %s, freezing it in place!", src.name:capitalize())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s rebalances the bulky plates of %s %s, and thngs slow down a bit.", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s revels in the bloodlust of %s %s!", who.name:capitalize(), who:his_her(), self:getName({do_color = true, no_add_name = true}))
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#GREEN#You feel the seasons in perfect balance.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#GREEN#You feel the seasons in perfect balance.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "%s's weapon returns to %s!", who.name:capitalize(), who:him_her())
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#YELLOW#You feel psionic energy linking the mindstars.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#YELLOW#You feel psionic energy linking the mindstars.")
./data/general/objects/world-artifacts.lua:			game.logSeen(who, "#YELLOW#You feel psionic energy linking the mindstars.")
./data/general/traps/alarm.lua:				game.logSeen(m, "%s appears out of the thin air!", m.name:capitalize())
./data/general/traps/complex.lua:		if self.nb <= 0 then game.level:removeEntity(self, true) game.logSeen(self, "The poison spore looks somewhat drained.") return end
./data/general/traps/natural_forest.lua:			game.logSeen(who, "%s resists!", who.name:capitalize())
./data/general/traps/teleport.lua:					game.logSeen(who, "%s is teleported away!", who.name:capitalize())
./data/general/traps/teleport.lua:			game.logSeen(who, "%s resists being teleported!", who.name:capitalize())
./data/maps/vaults/auto/greater/paladin-vs-vampire.lua:			game.logSeen(m, "The corrupted lava reanimates %s's corpse!", who.name:capitalize())
./data/maps/vaults/portal-vault.lua:		-- 		game.logSeen(who, "#YELLOW#The Portal repels %s briefly as %s approaches it.", who.name:capitalize(), who:he_she())
./data/quests/antimagic.lua:			if first then game.logSeen(m, "#VIOLET#A foe is summoned to the arena!")
./data/quests/antimagic.lua:			else game.logSeen(m, "#VIOLET#Another foe is summoned to the arena!") end
./data/quests/lumberjack-cursed.lua:	game.logSeen(game.player, "#LIGHT_RED#A lumberjack falls to the ground, dead.")
./data/quests/paradoxology.lua:		game.logSeen(self, "#LIGHT_BLUE#Killing your own future self does feel weird, but you know that you can avoid this future. Just do not time travel.")
./data/quests/paradoxology.lua:			game.logSeen(self, "#LIGHT_BLUE#Your future self kills you! The timestreams are broken by the paradox!")
./data/quests/paradoxology.lua:			game.logSeen(self, "#LIGHT_BLUE#All those events never happened. Except they did, somewhen.")
./data/talents/celestial/chants.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/celestial/combat.lua:				game.logSeen(self, "#CRIMSON#"..self.name.."strikes twice with Wave of Power!#NORMAL#")
./data/talents/celestial/eclipse.lua:			game.logSeen(self, "%s's darkness can no longer hold back the light!", self.name:capitalize())
./data/talents/celestial/hymns.lua:		game.logSeen(self, "#DARK_GREY#A shroud of shadow dances around %s!", self.name)
./data/talents/celestial/hymns.lua:		game.logSeen(self, "#DARK_GREY#The shroud of shadows around %s disappears.", self.name)
./data/talents/celestial/twilight.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/chronomancy/anomalies.lua:				game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/anomalies.lua:						game.logSeen(who, "%s tries to enter the wormhole but a violent force pushes it back.", who.name:capitalize())
./data/talents/chronomancy/anomalies.lua:					game.logSeen(who, "%s ignores the wormhole.", who.name:capitalize())
./data/talents/chronomancy/anomalies.lua:					game.logSeen(self, "Reality asserts itself and forces the wormhole shut.")
./data/talents/chronomancy/anomalies.lua:				game.logSeen(target, "%s is drawn in by gravity!", target.name:capitalize())
./data/talents/chronomancy/anomalies.lua:						game.logSeen(target, "%s's %s is disrupted!", target.name:capitalize(), t.name)
./data/talents/chronomancy/anomalies.lua:						game.logSeen(target, "%s resists the tornado!", target.name:capitalize())
./data/talents/chronomancy/anomalies.lua:							game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/chronomancy/blade-threading.lua:		if not first_teleport then game.logSeen(self, "The spell fizzles!") return true end
./data/talents/chronomancy/blade-threading.lua:						game.logSeen(target, "%s has been cut from the timeline!", target.name:capitalize())
./data/talents/chronomancy/blade-threading.lua:						game.logSeen(target, "%s resists the temporal shear!", target.name:capitalize())
./data/talents/chronomancy/bow-threading.lua:							game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/chronomancy/bow-threading.lua:						game.logSeen(target, "%s is drawn in by the singularity!", target.name:capitalize())
./data/talents/chronomancy/bow-threading.lua:			game.logSeen(self, "You do not have line of sight.")
./data/talents/chronomancy/energy.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/chronomancy/energy.lua:			game.logSeen(target, "%s's %s is disrupted by the Energy Absorption!", target.name:capitalize(), t.name)
./data/talents/chronomancy/gravity.lua:							game.logSeen(target, "%s slams into something solid!", target.name:capitalize())
./data/talents/chronomancy/gravity.lua:					if not slam then game.logSeen(target, "%s is knocked back!", target.name:capitalize()) end
./data/talents/chronomancy/gravity.lua:					game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/chronomancy/gravity.lua:						game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/chronomancy/gravity.lua:					game.logSeen(target, "%s is drawn in by the singularity!", target.name:capitalize())
./data/talents/chronomancy/guardian.lua:				game.logSeen(self, "#ORCHID#%s has recovered!#LAST#", self.name:capitalize())
./data/talents/chronomancy/induced-phenomena.lua:						game.logSeen(target, "%s resists the blindness!", target.name:capitalize())
./data/talents/chronomancy/induced-phenomena.lua:						game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/talents/chronomancy/induced-phenomena.lua:						game.logSeen(target, "%s resists the confusion!", target.name:capitalize())
./data/talents/chronomancy/matter.lua:					game.logSeen(self, "#CRIMSON#%s's beneficial effect was stripped!#LAST#", target.name:capitalize())
./data/talents/chronomancy/other.lua:				game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/other.lua:			game.logSeen(target, "%s resists the swap!", target.name:capitalize())
./data/talents/chronomancy/other.lua:			game.logSeen(self, "You do not have line of sight.")
./data/talents/chronomancy/other.lua:			game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/other.lua:						game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/chronomancy/other.lua:				game.logSeen(target, "%s has been pulled apart at a molecular level!", target.name:capitalize())
./data/talents/chronomancy/other.lua:				game.logSeen(target, "%s resists the quantum spike!", target.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:								game.logSeen(self, "The teleport fizzles!")
./data/talents/chronomancy/spacetime-folding.lua:							game.logSeen(self, "The teleport fizzles!")
./data/talents/chronomancy/spacetime-folding.lua:					game.logSeen(who, "%s resists the teleport!", who.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:							game.logSeen(self, "The teleport fizzles!")
./data/talents/chronomancy/spacetime-folding.lua:							game.logSeen(target, "#CRIMSON#%s has been yanked back to the tether!", target.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:						game.logSeen(target, "%s resists the teleport!", target.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:					game.logSeen(target, "The spell fizzles on %s!", target.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:					game.logSeen(target, "#CRIMSON#%s has been banished!", target.name:capitalize())
./data/talents/chronomancy/spacetime-folding.lua:				game.logSeen(target, "%s resists the banishment!", target.name:capitalize())
./data/talents/chronomancy/spacetime-weaving.lua:				game.logSeen(self, "%s's space-time folding fizzles!", self.name:capitalize())
./data/talents/chronomancy/spacetime-weaving.lua:				game.logSeen(self, "%s emerges from a space-time rift!", self.name:capitalize())
./data/talents/chronomancy/spacetime-weaving.lua:							game.logSeen(who, "%s tries to enter the wormhole but a violent force pushes it back.", who.name:capitalize())
./data/talents/chronomancy/spacetime-weaving.lua:						game.logSeen(who, "%s ignores the wormhole.", who.name:capitalize())
./data/talents/chronomancy/spacetime-weaving.lua:						game.logSeen(self, "Reality asserts itself and forces the wormhole shut.")
./data/talents/chronomancy/spacetime-weaving.lua:		game.logSeen(self, "%s folds the space between two points.", self.name)
./data/talents/chronomancy/speed-control.lua:			game.logSeen(self, "#STEEL_BLUE#%s has stopped time!#LAST#", self.name:capitalize())
./data/talents/chronomancy/temporal-hounds.lua:				game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/threaded-combat.lua:				game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/threaded-combat.lua:			if #poss == 0 then return game.logSeen(self, "The spell fizzles!") end
./data/talents/chronomancy/threaded-combat.lua:				game.logSeen(self, "The spell fizzles!")
./data/talents/chronomancy/threaded-combat.lua:					game.logSeen(self, "%s calls forth a temporal warden from another timeline.", self.name:capitalize())
./data/talents/chronomancy/threaded-combat.lua:						game.logSeen(self, "%s calls forth a temporal warden from another timeline.", self.name:capitalize())
./data/talents/chronomancy/threaded-combat.lua:					game.logSeen(self, "%s calls forth a temporal warden from another timeline.", self.name:capitalize())
./data/talents/chronomancy/threaded-combat.lua:						game.logSeen(self, "%s calls forth a temporal warden from another timeline.", self.name:capitalize())
./data/talents/chronomancy/timeline-threading.lua:				game.logSeen(target, "#LIGHT_BLUE#%s never existed, this never happened!", target.name:capitalize())
./data/talents/chronomancy/timeline-threading.lua:			game.logSeen(self, "#LIGHT_STEEL_BLUE#%s tries to remove %sself from existance!", self.name, string.his_her(self))
./data/talents/chronomancy/timeline-threading.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/chronomancy/timetravel.lua:			game.logSeen(target, "%s is immune!", target.name:capitalize())
./data/talents/chronomancy/timetravel.lua:		if not hit then game.logSeen(target, "%s resists!", target.name:capitalize()) return true end
./data/talents/chronomancy/timetravel.lua:		game.logSeen(target, "%s has moved forward in time!", target.name:capitalize())
./data/talents/corruptions/bone.lua:				game.logSeen(target, "%s resists the bone!", target.name:capitalize())
./data/talents/corruptions/bone.lua:				game.logSeen(self, "A part of %s's bone shield regenerates.", self.name)
./data/talents/corruptions/plague.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/corruptions/plague.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/corruptions/plague.lua:		game.logSeen(self, "The diseases of %s spread!", self.name)
./data/talents/corruptions/plague.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/corruptions/rot.lua:				game.logSeen(self, "%s exudes a corrupted gas as it dies.", self.name:capitalize())
./data/talents/corruptions/rot.lua:			game.logSeen(self, "The worm walk fizzles!")
./data/talents/corruptions/rot.lua:				game.logSeen(target, "%s resists the worm rot!", target.name:capitalize())
./data/talents/corruptions/scourge.lua:				game.logSeen(target, "%s resists the cut!", target.name:capitalize())
./data/talents/corruptions/scourge.lua:				game.logSeen(target, "%s resists the cut!", target.name:capitalize())
./data/talents/corruptions/scourge.lua:				game.logSeen(self, "%s resists the darkness.", target.name:capitalize())
./data/talents/corruptions/vim.lua:			if not target:canBe("teleport") then game.logSeen("%s resists the portal!") return end
./data/talents/cunning/ambush.lua:			game.logSeen(target, "%s resists the shadow!", target.name:capitalize())
./data/talents/cunning/ambush.lua:				game.logSeen(target, "%s resists the shadow!", target.name:capitalize())
./data/talents/cunning/artifice.lua:				game.logSeen(self, "#GREY#You notice %s has prepared: %s.", self.name:capitalize(), self:getTalentFromId(tid).name)
./data/talents/cunning/artifice.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/cunning/artifice.lua:				game.logSeen(self, "%s resists the sedation!", target.name:capitalize())
./data/talents/cunning/artifice.lua:					game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/talents/cunning/artifice.lua:					game.logSeen(self, "%s uses a grappling hook to pull %s %s!", self.name:capitalize(), self:his_her_self(), game.level.map:compassDirection(tx - self.x, ty - self.y))
./data/talents/cunning/called-shots.lua:			game.logSeen(target, "%s resists being knocked down.", target.name:capitalize())
./data/talents/cunning/called-shots.lua:			game.logSeen(target, "%s resists the stunning shot!", target.name:capitalize())
./data/talents/cunning/dirty.lua:				game.logSeen(target, "#CRIMSON#%s's %s was extended!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or e.desc)
./data/talents/cunning/dirty.lua:						game.logSeen(target, "#CRIMSON#%s's %s was stripped!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or eff[2].desc)
./data/talents/cunning/dirty.lua:						game.logSeen(target, "#CRIMSON#%s's %s was disrupted!#LAST#", target.name:capitalize(), util.getval(p.getName, p) or eff[2].desc)
./data/talents/cunning/poisons.lua:			game.logSeen(target, "#GREEN#Poison bursts out of %s's corpse!", target.name:capitalize())
./data/talents/cunning/poisons.lua:				game.logSeen(target, "#GREEN#%s's %s is disrupted by crippling poison!", target.name:capitalize(), t.name)
./data/talents/cunning/scoundrel.lua:			game.logSeen(target, "#CRIMSON#%s's %s is disrupted by %s wounds!", target.name:capitalize(), t.name, target:his_her())
./data/talents/cunning/scoundrel.lua:			game.logSeen(target, "#CRIMSON#%s's %s is disrupted by %s wounds!", target.name:capitalize(), t.name, target:his_her())
./data/talents/cunning/scoundrel.lua:		game.logSeen(self, "#ORANGE#%s redirects the effect '%s'!", self.name:capitalize(), e.desc)
./data/talents/cunning/shadow-magic.lua:			game.logSeen(self, "You do not have line of sight.")
./data/talents/cunning/shadow-magic.lua:		if not self:teleportRandom(x, y, 0) then game.logSeen(self, "The spell fizzles!") return true end
./data/talents/cunning/shadow-magic.lua:				game.logSeen(target, "%s is not dazed!", target.name:capitalize())
./data/talents/cunning/tactical.lua:			game.logSeen(self, "%s counters the attack!", target.name:capitalize())
./data/talents/cunning/traps.lua:	game.logSeen(m, "#PINK#A %s materializes from the shadows!", m.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s resists!", who.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s disappears into a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:						game.logSeen(who, "%s is partially buried in a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:						game.logSeen(who, "%s avoids a collapsing pit!", who.name:capitalize())
./data/talents/cunning/traps.lua:							game.logSeen(self.target, "%s emerges from a collapsed pit.", self.target.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(self, "#LIGHT_STEEL_BLUE#%s distorts time and space!", self:getName())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s knocks %s back!", self:getName():capitalize(), who.name:capitalize())
./data/talents/cunning/traps.lua:					game.logSeen(who, "%s fails to knock %s back!", self:getName():capitalize(), who.name:capitalize())
./data/talents/cursed/cursed-aura.lua:				game.logSeen({x=self.x, y=self.y}, "#F53CBE#%s drops to the ground.", self.name:capitalize())
./data/talents/cursed/darkness.lua:					game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:				game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:					game.logSeen(self, "The dark tendrils dissipate.")
./data/talents/cursed/darkness.lua:				game.logSeen(self, "The dark tendrils lash at %s.", self.target.name)
./data/talents/cursed/darkness.lua:							--game.logSeen(target, "%s stumbles in the darkness!", target.name:capitalize())
./data/talents/cursed/endless-hunt.lua:					game.logSeen(target, "#F53CBE#%s's %s is disrupted!", target.name:capitalize(), t.name)
./data/talents/cursed/fears.lua:			game.logSeen(target, "#F53CBE#%s ignores the fear!", target.name:capitalize())
./data/talents/cursed/fears.lua:			game.logSeen(target, "%s resists the fear!", target.name:capitalize())
./data/talents/cursed/fears.lua:						game.logSeen(actor, "#F53CBE#%s ignores the panic!", actor.name:capitalize())
./data/talents/cursed/fears.lua:						game.logSeen(actor, "#F53CBE#%s resists the panic!", actor.name:capitalize())
./data/talents/cursed/force-of-will.lua:						game.logSeen(target, "%s was smashed back %d spaces!", target.name:capitalize(), knockbackCount)
./data/talents/cursed/force-of-will.lua:						game.logSeen(target, "%s was smashed!", target.name:capitalize())
./data/talents/cursed/force-of-will.lua:				game.logSeen(target, "%s was blasted back %d spaces!", target.name:capitalize(), knockbackCount)
./data/talents/cursed/gestures.lua:			game.logSeen(self, "%s resists the Gesture of Pain.", target.name:capitalize())
./data/talents/cursed/primal-magic.lua:			game.logSeen(self, "Your attempt to displace fails!")
./data/talents/cursed/punishments.lua:					game.logSeen(who, "%s resists the stun!", who.name:capitalize())
./data/talents/cursed/punishments.lua:							game.logSeen(self, "%s holds on to its sanity.", self.name:capitalize())
./data/talents/cursed/rampage.lua:				game.logSeen(self, "#F53CBE#%s slams %s!", self.name:capitalize(), target.name)
./data/talents/cursed/rampage.lua:					game.logSeen(target, "#F53CBE#%s resists the stunning blow!", target.name:capitalize())
./data/talents/cursed/slaughter.lua:--					game.logSeen(self, "%s cleaves through another foe!", self.name:capitalize())
./data/talents/cursed/strife.lua:		if not self:teleportRandom(x, y, 0) then game.logSeen(self, "The blindside fizzles!") return true end
./data/talents/gifts/antimagic.lua:		game.logSeen(self, "%s is invigorated by the attack!", self.name:capitalize())
./data/talents/gifts/antimagic.lua:					game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/talents/gifts/antimagic.lua:			game.logSeen(self, "#GREEN#The antimagic shield of %s crumbles.", self.name)
./data/talents/gifts/sand-drake.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:				game.logSeen(target, "%s resists the static field!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:			game.logSeen(target, "%s is caught in the static field!", target.name:capitalize())
./data/talents/gifts/storm-drake.lua:					game.logSeen(target, "%s resists the tornado!", target.name:capitalize())
./data/talents/misc/horrors.lua:		game.logSeen(self, "The scent of blood sends the %ss into a frenzy!", self.name:capitalize())
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the cut!", target.name:capitalize())
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the void!", target.name:capitalize())
./data/talents/misc/horrors.lua:				if target.x ~= ox or target.y ~= oy then game.logSeen(target, "%s is pulled in!", target.name:capitalize()) end
./data/talents/misc/horrors.lua:			game.logSeen(target, "%s resists the grab!", target.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/misc/inscriptions.lua:			game.logSeen(target, "%s is immune!", target.name:capitalize())
./data/talents/misc/inscriptions.lua:		if not hit then game.logSeen(target, "%s resists!", target.name:capitalize()) return true end
./data/talents/misc/inscriptions.lua:		game.logSeen(target, "%s has moved forward in time!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the blinding!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/misc/npcs.lua:			game.logSeen(target, "%s resists the blow!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the constriction!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the grab!", target.name:capitalize())
./data/talents/misc/npcs.lua:					game.logSeen(who, "%s resists!", who.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the crushing!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "%s spawns one of its tentacles!", self.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "%s spawns a tentacle!", self.name:capitalize())
./data/talents/misc/npcs.lua:				if target.x ~= ox or target.y ~= oy then game.logSeen(target, "%s is pulled in!", target.name:capitalize()) end
./data/talents/misc/npcs.lua:			game.logSeen(self, "%s spawns a slimy crawler!", self.name:capitalize())
./data/talents/misc/npcs.lua:		game.logSeen("#VIOLET#%s is freed from the suspended state!", self.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the body shot!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/misc/npcs.lua:				game.logSeen(self, "You can't move there.")
./data/talents/misc/npcs.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/misc/objects.lua:					game.logSeen(self, "%s's animating magic is disrupted!", target.name:capitalize())
./data/talents/misc/objects.lua:			game.logSeen(self, "#CRIMSON#%s's shield deflects the blow!", self.name)
./data/talents/misc/races.lua:			game.logSeen(self, "#CRIMSON#%s roars with rage shaking off %d mental debuffs!", self.name:capitalize(), nb)
./data/talents/misc/races.lua:				game.logSeen(target, "%s resists the mental assault!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s resists the shove!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is knocked back by the gale!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s remains firmly planted in the face of the gale!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is knocked back by the telekinetic blow!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s holds its ground!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s is teleported a short distance!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s resists the teleportation!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s retreats in terror!", target.name:capitalize())
./data/talents/misc/tutorial.lua:			game.logSeen(target, "%s shakes off the fear!", target.name:capitalize())
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/absorption.lua:			if not silent then game.logSeen(self, "You may only sustain two shields at once. Shield activation cancelled.") end
./data/talents/psionic/augmented-mobility.lua:		game.logSeen(self, "%s performs a telekinetically enhanced leap!", self.name:capitalize())
./data/talents/psionic/augmented-striking.lua:				game.logSeen(target, "%s resists the pin!", target.name:capitalize())
./data/talents/psionic/augmented-striking.lua:						game.logSeen(lt, "%s resists the pin!", lt.name:capitalize())
./data/talents/psionic/augmented-striking.lua:						game.logSeen(rt, "%s resists the pin!", rt.name:capitalize())
./data/talents/psionic/dream-forge.lua:			game.logSeen(self, "#ORANGE#%s forges a dream shield to block the attack!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:			game.logSeen(self, "#ORANGE#%s's dream shield has been strengthened by the attack!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:				game.logSeen(self, "#GOLD#%s strikes the dreamforge!", self.name:capitalize())
./data/talents/psionic/dream-forge.lua:				game.logSeen(self, "#GOLD#%s begins breaking dreams!", self.name:capitalize())
./data/talents/psionic/dream-smith.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/psionic/dreaming.lua:					game.logSeen(self, "%s resists the sleep!", target.name:capitalize())
./data/talents/psionic/dreaming.lua:			game.logSeen(self, "The dream walk fizzles!")
./data/talents/psionic/finer-energy-manipulations.lua:			game.logSeen(self, "%s is cured!", self.name:capitalize())
./data/talents/psionic/focus.lua:			game.logSeen(self, "#ORCHID#%s has recovered!", self.name:capitalize())
./data/talents/psionic/kinetic-mastery.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/psionic/mentalism.lua:		game.logSeen(self, "%s's mind is clear!", self.name:capitalize())
./data/talents/psionic/nightmare.lua:					game.logSeen(self, "%s resists the nightmare!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:		game.logSeen(target, "#F53CBE#%s's Inner Demon manifests!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:			game.logSeen(target, "%s resists the demons!", target.name:capitalize())
./data/talents/psionic/nightmare.lua:			game.logSeen(target, "%s resists the nightmare!", target.name:capitalize())
./data/talents/psionic/other.lua:			game.logSeen(self, "%s telekinetically seizes: %s.", self.name:capitalize(), o:getName{do_color=true})
./data/talents/psionic/other.lua:			game.logSeen(a, "%s telekinetically grabs %s!", self.name:capitalize(), a.name)
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/projection.lua:			if not silent then game.logSeen(self, "You may only sustain two auras at once. Aura activation cancelled.") end
./data/talents/psionic/psi-fighting.lua:					game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/psionic/psychic-assault.lua:			game.logSeen(target, "%s resists the lobotomy!", target.name:capitalize())
./data/talents/psionic/slumber.lua:			game.logSeen(self, "%s resists the sleep!", target.name:capitalize())
./data/talents/psionic/voracity.lua:						game.logSeen(self, "%s resists the sleep!", act.name:capitalize())
./data/talents/spells/air.lua:		game.logSeen(self, "#0080FF#A furious lightning storm forms around %s!", self.name)
./data/talents/spells/air.lua:		game.logSeen(self, "#0080FF#The furious lightning storm around %s calms down and disappears.", self.name)
./data/talents/spells/arcane.lua:		game.logSeen(self, "#VIOLET#%s's disruption shield collapses and then explodes in a powerful manastorm!", self.name:capitalize())
./data/talents/spells/conveyance.lua:				game.logSeen(target, "The spell fizzles!")
./data/talents/spells/conveyance.lua:				game.logSeen(target, "The spell fizzles!")
./data/talents/spells/eldritch-shield.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/spells/eldritch-shield.lua:				game.logSeen(target, "%s resists the dazing blows!", target.name:capitalize())
./data/talents/spells/energy-alchemy.lua:			game.logSeen(golem, "%s is energized by the attack, reducing some talent cooldowns!", golem.name:capitalize())
./data/talents/spells/energy-alchemy.lua:			game.logSeen(self, "#LIGHT_STEEL_BLUE#%s is energized by all the damage taken!", self.name:capitalize())
./data/talents/spells/fire-alchemy.lua:		game.logSeen(self, "#FF8000#%s turns into pure flame!", self.name:capitalize())
./data/talents/spells/fire-alchemy.lua:		game.logSeen(self, "#FF8000#The raging fire around %s calms down and disappears.", self.name)
./data/talents/spells/golem.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/spells/golem.lua:				game.logSeen(target, "%s resists the crushing!", target.name:capitalize())
./data/talents/spells/golem.lua:					game.logSeen(target, "%s resists the dazing blow!", target.name:capitalize())
./data/talents/spells/ice.lua:							game.logSeen(act, "%s shatters!", act.name:capitalize())
./data/talents/spells/spells.lua:				game.logSeen(self, "#{bold}#%s decays into a pile of ash!#{normal}#", self.name:capitalize())
./data/talents/spells/staff-combat.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/spells/water.lua:		game.logSeen(self, "A #LIGHT_BLUE#wave of icy water#LAST# erupts from the ground!")
./data/talents/techniques/2h-assault.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s feels the pain of the death blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s resists the death blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:				game.logSeen(target, "%s resists the stunning blow!", target.name:capitalize())
./data/talents/techniques/2hweapon.lua:						game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/techniques/agility.lua:				game.logSeen(target, "%s resists the daze!", target.name:capitalize())
./data/talents/techniques/archery.lua:			game.logSeen(target, "%s resists the scattershot!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the silence!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the disarm!", target.name:capitalize())
./data/talents/techniques/archery.lua:				game.logSeen(target, "%s resists the slow!", target.name:capitalize())
./data/talents/techniques/archery.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/techniques/assassination.lua:				game.logSeen(target, "%s resists the Coup de Grace!", target.name:capitalize())
./data/talents/techniques/assassination.lua:					game.logSeen(self, "#GREY#%s slips into shadow.", self.name:capitalize())
./data/talents/techniques/bloodthirst.lua:			game.logSeen(target, "%s resists the terror!", target.name:capitalize())
./data/talents/techniques/buckler-training.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/techniques/buckler-training.lua:			--game.logSeen(self, "%s follows up with a shot from %s!", self.name:capitalize(), sling:getName())
./data/talents/techniques/conditioning.lua:				game.logSeen(self, "#ORCHID#%s has recovered!#LAST#", self.name:capitalize())
./data/talents/techniques/conditioning.lua:					game.logSeen(target, "%s is not intimidated!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:				game.logSeen(target, "%s resists the surprise strike!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:				game.logSeen(target, "%s resists the stunning strike!", target.name:capitalize())
./data/talents/techniques/dualweapon.lua:		game.logSeen(self, "%s becomes a whirlwind of weapons!", self.name:capitalize())
./data/talents/techniques/excellence.lua:		game.logSeen(self, "%s %s the attack!", self.name:capitalize(), ret and "intercepts" or "fails to intercept")
./data/talents/techniques/excellence.lua:			game.logSeen(target, "%s resists the strangling shot!", target.name:capitalize())
./data/talents/techniques/field-control.lua:				game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s feels the pain of the death blow!", target.name:capitalize())
./data/talents/techniques/finishing-moves.lua:				game.logSeen(target, "%s resists the death blow!", target.name:capitalize())
./data/talents/techniques/reflexes.lua:			game.logSeen(target, "%s's %s is disrupted by the shot!", target.name:capitalize(), t.name)
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s resists!", target.name:capitalize())
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s is knocked back!", target.name:capitalize())
./data/talents/techniques/sling.lua:			game.logSeen(target, "%s stands firm!", target.name:capitalize())
./data/talents/techniques/strength-of-the-berserker.lua:						game.logSeen(self, "#CRIMSON#%s shatters %s shield!", self.name:capitalize(), target.name)
./data/talents/techniques/superiority.lua:				game.logSeen(target, "%s is called to battle!", target.name:capitalize())
./data/talents/techniques/thuggery.lua:				game.logSeen(target, "%s resists the headblow!", target.name:capitalize())
./data/talents/techniques/weaponshield.lua:				game.logSeen(target, "%s resists the shield bash!", target.name:capitalize())
./data/talents/techniques/weaponshield.lua:					game.logSeen(target, "%s resists the knockback!", target.name:capitalize())
./data/talents/uber/const.lua:			game.logSeen(self,"%s's draconic body hardens and heals!",self.name)
./data/talents/uber/cun.lua:			game.logSeen(self, "#LIGHT_BLUE#%s slows from critical velocity!", self.name:capitalize())
./data/talents/uber/cun.lua:			game.logSeen(self, "#LIGHT_BLUE#%s reaches critical velocity!", self.name:capitalize())
./data/talents/uber/cun.lua:			game.logSeen(self, "#VIOLET#%s assembles %s!", self.name:capitalize(), o:getName{do_colour=true, no_count=true})
./data/talents/uber/cun.lua:		elseif damtype == DamageType.FIRE and rng.percent(30) then ok=true self:removeEffectsFilter{type="magical", status="detrimental"} self:removeEffectsFilter{type="physical", status="detrimental"} game.logSeen(self, "#CRIMSON#%s fiery attack invokes a cleansing flame!", self.name:capitalize())
./data/talents/uber/wil.lua:							game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./data/talents/uber/wil.lua:		game.logSeen(self, "#LIGHT_BLUE#%s's unbreakable will shrugs off the effect!", self.name:capitalize())
./data/talents/undeads/ghoul.lua:		game.logSeen(self, "%s #YELLOW_GREEN#VOMITS#LAST# on the ground!", self.name:capitalize())
./data/talents/undeads/ghoul.lua:				game.logSeen(target, "%s resists the disease!", target.name:capitalize())
./data/timed_effects/magical.lua:			game.logSeen(self, "#LIGHT_RED#A carrion worm mass bursts out of %s!", self.name:capitalize())
./data/timed_effects/magical.lua:						game.logSeen(target, "%s is pulled in!", target.name:capitalize()) 
./data/timed_effects/magical.lua:			game.logSeen(self, "%s has unraveled!", self.name:capitalize())
./data/timed_effects/magical.lua:			game.logSeen(self, "%s has been removed from the timeline!", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s's mind recovers from the domination.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s collapses.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the beckoning.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s is jolted to attention by the damage and is no longer being beckoned.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the paranoia.", self.name:capitalize())
./data/timed_effects/mental.lua:								game.logSeen(target, "#F53CBE#%s ignores the fear!", target.name:capitalize())
./data/timed_effects/mental.lua:								game.logSeen(target, "%s resists the fear!", target.name:capitalize())
./data/timed_effects/mental.lua:					game.logSeen(self, "#F53CBE#%s is struck by fear of the %s effect.", self.name:capitalize(), def.desc)
./data/timed_effects/mental.lua:		game.logSeen(self, "#F53CBE#%s is struck by fear of the %s effect.", self.name:capitalize(), util.getval(e.desc, self, e))
./data/timed_effects/mental.lua:				game.logSeen(self, "%s is tormented by a vision!", target.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s struggles against the panic.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "#F53CBE#%s succumbs to the nightmare!", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s dies when its frenzy ends!", self.name:capitalize())
./data/timed_effects/mental.lua:		if old_eff.cur_regen + new_eff.regen < new_eff.max then	game.logSeen(self, "%s's blood frenzy intensifies!", self.name:capitalize()) end
./data/timed_effects/mental.lua:		game.logSeen(self, "%s revels in the spilt blood and grows stronger!",self.name:capitalize())
./data/timed_effects/mental.lua:		game.logSeen(self, "%s no longer revels in blood quite so much.",self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s's increased life fades, leaving it stunned by the loss.", self.name:capitalize())
./data/timed_effects/mental.lua:			game.logSeen(self, "%s has shrugged off %d damage and is ready for more.", self.name:capitalize(), eff.damageShieldMax - eff.damageShield)
./data/timed_effects/mental.lua:		--game.logSeen(self, "%s shrugs off %d damage.", self.name:capitalize(), absorb)
./data/timed_effects/mental.lua:		game.logSeen(self, ("%s has lost %d %s."):format(self.name:capitalize(), eff.statReduction, Stats.stats_def[maxId].name:capitalize()))
./data/timed_effects/mental.lua:		game.logSeen(self, "An unseen force begins to swirl around %s!", self.name)
./data/timed_effects/mental.lua:		game.logSeen(self, "The unseen force around %s subsides.", self.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#The see the threads spell fizzles and cancels, leaving you in this timeline.")
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#You've altered your destiny and will not be pulled into the past.")
./data/timed_effects/other.lua:			game.logSeen(target, "#F53CBE#%s's remains glow with a strange light.", target.name:capitalize())
./data/timed_effects/other.lua:				game.logSeen(m, "#F53CBE#The corpse of the %s pulls itself up to fight for you.", target.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#%s's mania hastens %s.", self.name:capitalize(), t.name)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#%s begins to choke from a suffocating curse. (-%d air)", target.name, airLoss)
./data/timed_effects/other.lua:				game.logSeen(self, "#F53CBE#The air around %s grows cold and terrifying shapes begin to coalesce. A nightmare has begun.", self.name:capitalize())
./data/timed_effects/other.lua:						game.logSeen(target, "#F53CBE#%s suffers an unfortunate end.", target.name:capitalize())
./data/timed_effects/other.lua:						game.logSeen(target, "#F53CBE#%s suffers an unfortunate blow.", target.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(self, "%s succumbs to heightening fears!", self.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(self, "%s feels a little less afraid!", self.name:capitalize())
./data/timed_effects/other.lua:					game.logSeen(p.target, "#LIGHT_RED#%s writhes in agony as a fragment of its mind is destroyed!", p.target.name:capitalize())
./data/timed_effects/other.lua:			game.logSeen(eff.target, "#LIGHT_BLUE#%s has spawned a dream projection to protect its mind!", eff.target.name:capitalize())
./data/timed_effects/other.lua:				game.logSeen(eff.target, "#LIGHT_RED#%s's mind shatters into %d tiny fragments!", eff.target.name:capitalize(), eff.target.max_life)
./data/timed_effects/other.lua:				game.logSeen(eff.target, "#LIGHT_RED#%s suffered a %s of self in the Dreamscape!", eff.target.name:capitalize(), loss)
./data/timed_effects/other.lua:				game.logSeen(self, "#LIGHT_RED#The spell fizzles.")
./data/timed_effects/other.lua:		game.logSeen(eff.src, "#LIGHT_RED#%s explodes into a shower of gore!", self.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "#GREY#%s looks stony for a moment, but resists the transformation.", self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s has re-opened a cursed wound!", self.name:capitalize())
./data/timed_effects/physical.lua:					game.logSeen(src, "%s resists the disarming attempt!", src.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "#LIGHT_RED#%s is being ravaged by distortion!", self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s's corrosive nature intensifies!",self.name:capitalize())
./data/timed_effects/physical.lua:		game.logSeen(self, "%s's natural acid becomes more concentrated!",self.name:capitalize())
./data/timed_effects/physical.lua:				game.logSeen(self, "Some leeches drop off %s!", self.name:capitalize())
./data/timed_effects/physical.lua:			game.logSeen(self, "Some leeches drop off %s!", self.name:capitalize())
./data/zones/abashed-expanse/grids.lua:			game.logSeen(src, "#VIOLET#The wormhole absorbs energies and stabilizes. You can now use it to travel.")
./data/zones/ancient-elven-ruins/objects.lua:		game.logSeen(who, "#ANTIQUE_WHITE#The Crown of Eternal Night seems to react with the Bindings, you feel tremendous dark power.")
./data/zones/ardhungol/grids.lua:				game.logSeen(src, "#VIOLET#The wormhole absorbs the energy of the spell and teleports %s away!", a.name)
./data/zones/ardhungol/grids.lua:				game.logSeen({x=x,y=y}, "#VIOLET#The wormhole absorbs the energy of the spell and explodes in a burst of nullmagic!")
./data/zones/ardhungol/objects.lua:			game.logSeen(who, "%s activates %s %s!", who.name:capitalize(), who:his_her(), self:getName({no_add_name = true, do_color = true}))
./data/zones/arena/npcs.lua:			game.logSeen(self, "#AQUAMARINE#As %s falls all its eyes fall to the ground!", self.name)
./data/zones/arena/objects.lua:			game.logSeen(who, "%s uses %s!", who.name:capitalize(), self:getName{no_count=true, no_add_name=true})
./data/zones/deep-bellow/npcs.lua:			game.logSeen(self, "#CRIMSON#%s seems invulnerable, there must be an other way to kill it!", self.name:capitalize())
./data/zones/deep-bellow/npcs.lua:			game.logSeen(self, "#AQUAMARINE#With the Mouth's death its crawler also falls lifeless on the ground!")
./data/zones/deep-bellow/npcs.lua:				game.logSeen(self, "A parchment falls to the floor near The Abomination.")
./data/zones/deep-bellow/npcs.lua:				game.logSeen(self, "A parchment falls to the floor near The Abomination.")
./data/zones/demon-plane/objects.lua:			game.logSeen(who, "%s taps %s %s together!", who.name:capitalize(), who:his_her(), self:getName{no_count=true, do_color = true, no_add_name = true})
./data/zones/infinite-dungeon/objects.lua:		game.logSeen(who, "%s quaffs the %s!", who.name:capitalize(), self:getName())
./data/zones/infinite-dungeon/objects.lua:				game.logSeen(who, "%s quaffs the %s!", who.name:capitalize(), self:getName())
./data/zones/rak-shor-pride/npcs.lua:			game.logSeen(self, "The ground shakes as %s steps!", self.name:capitalize())
./data/zones/ruined-dungeon/zone.lua:						game.logSeen(m, "%s appears out of the thin air!", m.name:capitalize())
./data/zones/shadow-crypt/npcs.lua:				game.logSeen(self, "As your shade dies, the magical veil protecting the stairs out vanishes.")
./data/zones/shertul-fortress/grids.lua:				if self then game.logSeen(self, "#VIOLET#As %s falls you notice a portal appearing.", self.name)
./data/zones/shertul-fortress/grids.lua:				else game.logSeen(p, "#VIOLET#Your rod of recall shakes, a portal appears beneath you.") end
./data/zones/sludgenest/zone.lua:			game.logSeen(m, "#YELLOW_GREEN#One of the wall shakes for a moment and then turns into %s!", m.name:capitalize())
./data/zones/thieves-tunnels/npcs.lua:		game.logSeen(who, "As the assassin dies the magical veil protecting the stairs out vanishes.")
./data/zones/trollmire/npcs.lua:				game.logSeen(self, "Prox staggers for a moment. A note seems to drop at his feet.")
./data/zones/trollmire/npcs.lua:				game.logSeen(self, "Shax staggers for a moment. A note seems to drop at his feet.")
./mod/ai/sandworm_tunneler.lua:				game.logSeen(self, "#OLIVE_DRAB#The %s burrows into the ground and disappears.", self.name)
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s has been disrupted by #ORCHID#anti-magic forces#LAST#!", t.name) end
./mod/class/Actor.lua:			game.logSeen(self, "%s temporarily fights the paralyzation.", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s unleashes the stored damage in retribution!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s shatters into pieces!", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s splits in two!", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "#YELLOW#%s has been healed by a blast of positive energy!#LAST#", self.name:capitalize())
./mod/class/Actor.lua:			game.logSeen(self, "%s fades for a moment and then reforms whole again!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, self.self_resurrect_msg or "#LIGHT_RED#%s rises from the dead!", self.name:capitalize()) -- src, not self as the source, to make sure the player knows his doom ;>
./mod/class/Actor.lua:			game.logSeen(self, "%s warps space-time to equip: %s.", self.name:capitalize(), names)
./mod/class/Actor.lua:			game.logSeen(self, "%s switches %s weapons to: %s.", self.name:capitalize(), self:his_her(), names)
./mod/class/Actor.lua:		if not silent then game.logSeen(self, self.forbid_talents[ab.id] or "%s can not use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is too afraid to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is silenced and cannot use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "The spell fizzles.") end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is too disconnected from Nature to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is unable to use this kind of inscription.", self.name:capitalize()) end
./mod/class/Actor.lua:		if not silent then game.logSeen(self, "%s is unable to use this kind of inscription.", self.name:capitalize()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s is too heavily armoured to use this talent.", self.name:capitalize()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s can't use this talent while holding a weapon or shield.", self.name:capitalize()) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s's %s has been disrupted by #ORCHID#anti-magic forces#LAST#!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s's %s has been disrupted by #ORCHID#anti-nature forces#LAST#!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s is confused and fails to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s fails to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s is too terrified to use %s.", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:				if not silent then game.logSeen(self, "%s fumbles and fails to use %s, injuring %s!", self.name:capitalize(), ab.name, self:his_her_self()) end
./mod/class/Actor.lua:			if not silent then game.logSeen(self, "%s's %s is interrupted by the shot!", self.name:capitalize(), ab.name) end
./mod/class/Actor.lua:			game.logSeen(self, "%s", self:useTalentMessage(ab))
./mod/class/Actor.lua:			game.logSeen(self, "%s %s %s.", self.name:capitalize(), self:isTalentActive(ab.id) and "deactivates" or "activates", ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s casts %s.", self.name:capitalize(), ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s uses %s.", self.name:capitalize(), ab.name)
./mod/class/Actor.lua:			game.logSeen(self, "%s talent '%s%s' is disrupted by the mind parasite.", self.name:capitalize(), (t.display_entity and t.display_entity:getDisplayString() or ""), t.name)
./mod/class/Actor.lua:			game.logSeen(self, "#LIGHT_RED#%s starts suffocating to death!", self.name:capitalize())
./mod/class/Actor.lua:				game.logSeen(self, "#ORANGE#%s shrugs off the effect '%s'!", self.name:capitalize(), e.desc)
./mod/class/Actor.lua:		game.logSeen(self, "%s reflects the spell!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s ignores the spell!", self.name:capitalize())
./mod/class/Actor.lua:		game.logSeen(self, "%s drops on the floor: %s.", self.name:capitalize(), stack:getName{do_color=true, do_count=true})
./mod/class/generator/actor/HighPeakFinal.lua:			game.logSeen(m, "An entity appears through the portal!")
./mod/class/generator/actor/ValleyMoon.lua:		game.logSeen(_M.limmir, "Limmir summons a blast of holy light!")
./mod/class/Grid.lua:			if game.level.map.attrs(x, y, "on_block_change_msg") then game.logSeen({x=x, y=y}, "%s", game.level.map.attrs(x, y, "on_block_change_msg")) end
./mod/class/interface/ActorObjectUse.lua:				game.logSeen(self, "%s activates %s %s!", self.name:capitalize(), self:his_her(), data.obj:getName({no_add_name=true, do_color = true}))
./mod/class/interface/ActorObjectUse.lua:				if msg then game.logSeen(self, "%s", msg) end
./mod/class/interface/Archery.lua:		game.logSeen(target, "The shattering blow creates a shockwave!")
./mod/class/interface/Combat.lua:		game.logSeen(self, "%s is too afraid to attack.", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "%s is too terrified to attack.", self.name:capitalize())
./mod/class/interface/Combat.lua:			game.logSeen(target, "#ORCHID#%s cleverly deflects the attack with %s shield!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:			game.logSeen(target, "#ORCHID#%s parries the attack with %s dual weapons!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:		game.logSeen(target, "#ORCHID#%s instinctively hardens %s skin and ignores the attack!#LAST#", target.name:capitalize(), string.his_her(target))
./mod/class/interface/Combat.lua:		game.logSeen(target, "The shattering blow creates a shockwave!")
./mod/class/interface/Combat.lua:					game.logSeen(target, "%s resists the stun!", target.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "#{bold}#%s's spell attains critical power!#{normal}#", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(self, "#{bold}#%s's mind surges with critical power!#{normal}#", self.name:capitalize())
./mod/class/interface/Combat.lua:		game.logSeen(target, "%s resists the grapple!", target.name:capitalize())
./mod/class/NPC.lua:	game.logSeen(self, "%s says: '%s'", self.name:capitalize(), e.text)
./mod/class/Player.lua:				game.logSeen(self, "There is an item here: %s", obj:getName{do_color=true})
./mod/class/Trap.lua:				game.logSeen(who, "#CADET_BLUE#%s %ss %s.", who.name:capitalize(), avoid, known_player and ("a trap (%s)"):format(self:getName()) or "something on the floor")
